<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='0.054000000000000006'>
        <calculation class='tableau' formula='0.054000000000000006' />
        <members>
          <member value='0.054000000000000006' />
          <member value='74223369.0' />
          <member value='0.307' />
          <member value='0.32100000000000001' />
          <member value='0.32200000000000001' />
          <member value='0.34299999999999997' />
          <member value='0.37' />
          <member value='0.377' />
          <member value='0.38600000000000001' />
          <member value='0.38799999999999996' />
          <member value='0.39200000000000002' />
          <member value='0.39799999999999996' />
          <member value='0.40399999999999997' />
          <member value='0.40600000000000003' />
          <member value='0.41399999999999998' />
          <member value='0.41899999999999998' />
          <member value='0.435' />
          <member value='0.44' />
          <member value='0.44500000000000001' />
          <member value='0.45299999999999996' />
          <member value='0.45399999999999996' />
          <member value='0.45700000000000002' />
          <member value='0.46899999999999997' />
          <member value='0.47700000000000004' />
          <member value='0.47799999999999998' />
          <member value='0.48799999999999999' />
          <member value='0.49099999999999999' />
          <member value='0.49299999999999999' />
          <member value='0.499' />
          <member value='0.501' />
          <member value='0.51200000000000001' />
          <member value='0.52100000000000002' />
          <member value='0.52300000000000002' />
          <member value='0.52800000000000002' />
          <member value='0.53100000000000003' />
          <member value='0.53299999999999992' />
          <member value='0.55100000000000005' />
          <member value='0.56200000000000006' />
          <member value='0.56299999999999994' />
          <member value='0.56799999999999995' />
          <member value='0.56899999999999995' />
          <member value='0.56999999999999995' />
          <member value='0.57600000000000007' />
          <member value='0.58099999999999996' />
          <member value='0.58499999999999996' />
          <member value='0.60699999999999998' />
          <member value='0.61799999999999999' />
          <member value='0.62' />
          <member value='0.621' />
          <member value='0.624' />
          <member value='0.63900000000000001' />
          <member value='0.65099999999999991' />
          <member value='0.65400000000000003' />
          <member value='0.68599999999999994' />
          <member value='0.69900000000000007' />
          <member value='0.75599999999999989' />
        </members>
      </column>
    </datasource>
    <datasource caption='trump_rally' inline='true' name='federated.16xd4bd1kys4tw11z0itw15bee2r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Popular vote backend - Sheet1' name='textscan.1w0b51o1bu8uyj1afu7w81ee5elh'>
            <connection class='textscan' directory='D:/1. Active Projects/Data Analysis/Github Repository/Donald_Trump_Rally_Speech_NLP_Analysis' filename='Popular vote backend - Sheet1.csv' password='' server='' />
          </named-connection>
          <named-connection caption='trump_rally' name='textscan.0s445y21y03fa319chy0l1v9hl65'>
            <connection class='textscan' directory='D:/1. Active Projects/Data Analysis/Github Repository/Donald_Trump_Rally_Speech_NLP_Analysis' filename='trump_rally.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Electoral College Results' name='textscan.19j3ocd1ve0tbf17l9ji91tlct71'>
            <connection class='textscan' directory='D:/1. Active Projects/Data Analysis/Github Repository/Donald_Trump_Rally_Speech_NLP_Analysis' filename='Electoral College Results.txt' password='' server='' />
          </named-connection>
          <named-connection caption='Electoral College Vote' name='textscan.0476rfd0n28v8t1blre2f1wfyxdn'>
            <connection class='textscan' directory='D:/1. Active Projects/Data Analysis/Github Repository/Donald_Trump_Rally_Speech_NLP_Analysis' filename='Electoral College Vote.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trump_rally.csv].[State]' />
              <expression op='[Electoral College Vote.csv].[State]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[trump_rally.csv].[State]' />
                <expression op='[Popular vote backend - Sheet1.csv].[state]' />
              </expression>
            </clause>
            <relation connection='textscan.0s445y21y03fa319chy0l1v9hl65' name='trump_rally.csv' table='[trump_rally#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='date' name='Date' ordinal='0' />
                <column datatype='integer' name='Day' ordinal='1' />
                <column datatype='string' name='Month' ordinal='2' />
                <column datatype='integer' name='Year' ordinal='3' />
                <column datatype='string' name='City' ordinal='4' />
                <column datatype='string' name='State' ordinal='5' />
                <column datatype='real' name='State millenials population percentage (25 - 34)' ordinal='6' />
                <column datatype='real' name='State late adult population percentage (55-64)' ordinal='7' />
                <column datatype='real' name='State adult Tertiary Education Rate (25+ years old) ' ordinal='8' />
                <column datatype='real' name='State unemployment Rate (16+ years old)' ordinal='9' />
                <column datatype='real' name='State percentage of management, business, science, and arts  workers (16+ years old)' ordinal='10' />
                <column datatype='real' name='State percentage of natural resources, construction, and maintenance workers (16+ years old)' ordinal='11' />
                <column datatype='real' name='State percentage of production, transportation, and material moving workers' ordinal='12' />
                <column datatype='real' name='State percentage of manufacturing workers (16+ years old)' ordinal='13' />
                <column datatype='real' name='State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)' ordinal='14' />
                <column datatype='real' name='State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea' ordinal='15' />
                <column datatype='real' name='State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)' ordinal='16' />
                <column datatype='integer' name='State inflation-adjusted average household income (2019)' ordinal='17' />
                <column datatype='real' name='State household percentage with cash public assistance as income(2019)' ordinal='18' />
                <column datatype='real' name='States poverty rate (percent of population)' ordinal='19' />
                <column datatype='real' name='WhiteTotalPerc' ordinal='20' />
                <column datatype='real' name='BlackTotalPerc' ordinal='21' />
                <column datatype='real' name='OtherTotalPerc' ordinal='22' />
                <column datatype='real' name='lat' ordinal='23' />
                <column datatype='real' name='lng' ordinal='24' />
                <column datatype='integer' name='population' ordinal='25' />
                <column datatype='real' name='s_Lat' ordinal='26' />
                <column datatype='real' name='s_Long' ordinal='27' />
                <column datatype='integer' name='Numbers Of Words' ordinal='28' />
                <column datatype='integer' name='Numbers Of StopWords' ordinal='29' />
                <column datatype='real' name='Average Word Length' ordinal='30' />
                <column datatype='real' name='Lexical Diversity' ordinal='31' />
                <column datatype='integer' name='Numbers of Geo Location Mentioned' ordinal='32' />
                <column datatype='integer' name='Numbers of Monetary Keywords Mentioned' ordinal='33' />
                <column datatype='integer' name='Numbers of Peoples&apos; Name Mentioned' ordinal='34' />
                <column datatype='real' name='Positive Sentiment' ordinal='35' />
                <column datatype='real' name='Neutral Sentiment' ordinal='36' />
                <column datatype='real' name='Negative Sentiment' ordinal='37' />
                <column datatype='real' name='Achievements' ordinal='38' />
                <column datatype='real' name='Plans, Vision and Appealing Support' ordinal='39' />
                <column datatype='real' name='Political Adversaries' ordinal='40' />
                <column datatype='string' name='F42' ordinal='41' />
              </columns>
            </relation>
            <relation connection='textscan.1w0b51o1bu8uyj1afu7w81ee5elh' name='Popular vote backend - Sheet1.csv' table='[Popular vote backend - Sheet1#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='state' ordinal='0' />
                <column datatype='string' name='called' ordinal='1' />
                <column datatype='string' name='final' ordinal='2' />
                <column datatype='integer' name='dem_votes' ordinal='3' />
                <column datatype='integer' name='rep_votes' ordinal='4' />
                <column datatype='integer' name='other_votes' ordinal='5' />
                <column datatype='real' name='dem_percent' ordinal='6' />
                <column datatype='real' name='rep_percent' ordinal='7' />
                <column datatype='real' name='other_percent' ordinal='8' />
                <column datatype='real' name='dem_this_margin' ordinal='9' />
                <column datatype='real' name='margin_shift' ordinal='10' />
                <column datatype='real' name='vote_change' ordinal='11' />
                <column datatype='string' name='stateid' ordinal='12' />
                <column datatype='integer' name='EV' ordinal='13' />
                <column datatype='integer' name='X' ordinal='14' />
                <column datatype='integer' name='Y' ordinal='15' />
                <column datatype='integer' name='State_num' ordinal='16' />
                <column datatype='integer' name='Center_X' ordinal='17' />
                <column datatype='integer' name='Center_Y' ordinal='18' />
                <column datatype='string' name='F20' ordinal='19' />
                <column datatype='real' name='2016 Margin' ordinal='20' />
                <column datatype='integer' name='Total 2016 Votes' ordinal='21' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0476rfd0n28v8t1blre2f1wfyxdn' name='Electoral College Vote.csv' table='[Electoral College Vote#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Total' ordinal='1' />
              <column datatype='integer' name='Biden' ordinal='2' />
              <column datatype='integer' name='Trump' ordinal='3' />
              <column datatype='integer' name='Harris' ordinal='4' />
              <column datatype='integer' name='Pence' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[2016 Margin]' value='[Popular vote backend - Sheet1.csv].[2016 Margin]' />
          <map key='[Achievements]' value='[trump_rally.csv].[Achievements]' />
          <map key='[Average Word Length]' value='[trump_rally.csv].[Average Word Length]' />
          <map key='[Biden]' value='[Electoral College Vote.csv].[Biden]' />
          <map key='[BlackTotalPerc]' value='[trump_rally.csv].[BlackTotalPerc]' />
          <map key='[Center_X]' value='[Popular vote backend - Sheet1.csv].[Center_X]' />
          <map key='[Center_Y]' value='[Popular vote backend - Sheet1.csv].[Center_Y]' />
          <map key='[City]' value='[trump_rally.csv].[City]' />
          <map key='[Date]' value='[trump_rally.csv].[Date]' />
          <map key='[Day]' value='[trump_rally.csv].[Day]' />
          <map key='[EV]' value='[Popular vote backend - Sheet1.csv].[EV]' />
          <map key='[F20]' value='[Popular vote backend - Sheet1.csv].[F20]' />
          <map key='[F42]' value='[trump_rally.csv].[F42]' />
          <map key='[Harris]' value='[Electoral College Vote.csv].[Harris]' />
          <map key='[Lexical Diversity]' value='[trump_rally.csv].[Lexical Diversity]' />
          <map key='[Month]' value='[trump_rally.csv].[Month]' />
          <map key='[Negative Sentiment]' value='[trump_rally.csv].[Negative Sentiment]' />
          <map key='[Neutral Sentiment]' value='[trump_rally.csv].[Neutral Sentiment]' />
          <map key='[Numbers Of StopWords]' value='[trump_rally.csv].[Numbers Of StopWords]' />
          <map key='[Numbers Of Words]' value='[trump_rally.csv].[Numbers Of Words]' />
          <map key='[Numbers of Geo Location Mentioned]' value='[trump_rally.csv].[Numbers of Geo Location Mentioned]' />
          <map key='[Numbers of Monetary Keywords Mentioned]' value='[trump_rally.csv].[Numbers of Monetary Keywords Mentioned]' />
          <map key='[Numbers of Peoples&apos; Name Mentioned]' value='[trump_rally.csv].[Numbers of Peoples&apos; Name Mentioned]' />
          <map key='[OtherTotalPerc]' value='[trump_rally.csv].[OtherTotalPerc]' />
          <map key='[Pence]' value='[Electoral College Vote.csv].[Pence]' />
          <map key='[Plans, Vision and Appealing Support]' value='[trump_rally.csv].[Plans, Vision and Appealing Support]' />
          <map key='[Political Adversaries]' value='[trump_rally.csv].[Political Adversaries]' />
          <map key='[Positive Sentiment]' value='[trump_rally.csv].[Positive Sentiment]' />
          <map key='[State (Electoral College Vote.csv)]' value='[Electoral College Vote.csv].[State]' />
          <map key='[State adult Tertiary Education Rate (25+ years old) ]' value='[trump_rally.csv].[State adult Tertiary Education Rate (25+ years old) ]' />
          <map key='[State household percentage with cash public assistance as income(2019)]' value='[trump_rally.csv].[State household percentage with cash public assistance as income(2019)]' />
          <map key='[State inflation-adjusted average household income (2019)]' value='[trump_rally.csv].[State inflation-adjusted average household income (2019)]' />
          <map key='[State late adult population percentage (55-64)]' value='[trump_rally.csv].[State late adult population percentage (55-64)]' />
          <map key='[State millenials population percentage (25 - 34)]' value='[trump_rally.csv].[State millenials population percentage (25 - 34)]' />
          <map key='[State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)]' value='[trump_rally.csv].[State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)]' />
          <map key='[State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)]' value='[trump_rally.csv].[State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)]' />
          <map key='[State percentage of management, business, science, and arts  workers (16+ years old)]' value='[trump_rally.csv].[State percentage of management, business, science, and arts  workers (16+ years old)]' />
          <map key='[State percentage of manufacturing workers (16+ years old)]' value='[trump_rally.csv].[State percentage of manufacturing workers (16+ years old)]' />
          <map key='[State percentage of natural resources, construction, and maintenance workers (16+ years old)]' value='[trump_rally.csv].[State percentage of natural resources, construction, and maintenance workers (16+ years old)]' />
          <map key='[State percentage of production, transportation, and material moving workers]' value='[trump_rally.csv].[State percentage of production, transportation, and material moving workers]' />
          <map key='[State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea]' value='[trump_rally.csv].[State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea]' />
          <map key='[State unemployment Rate (16+ years old)]' value='[trump_rally.csv].[State unemployment Rate (16+ years old)]' />
          <map key='[State]' value='[trump_rally.csv].[State]' />
          <map key='[State_num]' value='[Popular vote backend - Sheet1.csv].[State_num]' />
          <map key='[States poverty rate (percent of population)]' value='[trump_rally.csv].[States poverty rate (percent of population)]' />
          <map key='[Total 2016 Votes]' value='[Popular vote backend - Sheet1.csv].[Total 2016 Votes]' />
          <map key='[Total]' value='[Electoral College Vote.csv].[Total]' />
          <map key='[Trump]' value='[Electoral College Vote.csv].[Trump]' />
          <map key='[WhiteTotalPerc]' value='[trump_rally.csv].[WhiteTotalPerc]' />
          <map key='[X]' value='[Popular vote backend - Sheet1.csv].[X]' />
          <map key='[Y]' value='[Popular vote backend - Sheet1.csv].[Y]' />
          <map key='[Year]' value='[trump_rally.csv].[Year]' />
          <map key='[called]' value='[Popular vote backend - Sheet1.csv].[called]' />
          <map key='[dem_percent]' value='[Popular vote backend - Sheet1.csv].[dem_percent]' />
          <map key='[dem_this_margin]' value='[Popular vote backend - Sheet1.csv].[dem_this_margin]' />
          <map key='[dem_votes]' value='[Popular vote backend - Sheet1.csv].[dem_votes]' />
          <map key='[final]' value='[Popular vote backend - Sheet1.csv].[final]' />
          <map key='[lat]' value='[trump_rally.csv].[lat]' />
          <map key='[lng]' value='[trump_rally.csv].[lng]' />
          <map key='[margin_shift]' value='[Popular vote backend - Sheet1.csv].[margin_shift]' />
          <map key='[other_percent]' value='[Popular vote backend - Sheet1.csv].[other_percent]' />
          <map key='[other_votes]' value='[Popular vote backend - Sheet1.csv].[other_votes]' />
          <map key='[population]' value='[trump_rally.csv].[population]' />
          <map key='[rep_percent]' value='[Popular vote backend - Sheet1.csv].[rep_percent]' />
          <map key='[rep_votes]' value='[Popular vote backend - Sheet1.csv].[rep_votes]' />
          <map key='[s_Lat]' value='[trump_rally.csv].[s_Lat]' />
          <map key='[s_Long]' value='[trump_rally.csv].[s_Long]' />
          <map key='[state]' value='[Popular vote backend - Sheet1.csv].[state]' />
          <map key='[stateid]' value='[Popular vote backend - Sheet1.csv].[stateid]' />
          <map key='[vote_change]' value='[Popular vote backend - Sheet1.csv].[vote_change]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State millenials population percentage (25 - 34)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State millenials population percentage (25 - 34)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State millenials population percentage (25 - 34)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State late adult population percentage (55-64)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State late adult population percentage (55-64)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State late adult population percentage (55-64)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State adult Tertiary Education Rate (25+ years old) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[State adult Tertiary Education Rate (25+ years old) ]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State adult Tertiary Education Rate (25+ years old) </remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State unemployment Rate (16+ years old)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State unemployment Rate (16+ years old)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State unemployment Rate (16+ years old)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of management, business, science, and arts  workers (16+ years old)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of management, business, science, and arts  workers (16+ years old)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of management, business, science, and arts  workers (16+ years old)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of natural resources, construction, and maintenance workers (16+ years old)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of natural resources, construction, and maintenance workers (16+ years old)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of natural resources, construction, and maintenance workers (16+ years old)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of production, transportation, and material moving workers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of production, transportation, and material moving workers]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of production, transportation, and material moving workers</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of manufacturing workers (16+ years old)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of manufacturing workers (16+ years old)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of manufacturing workers (16+ years old)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State inflation-adjusted average household income (2019)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State inflation-adjusted average household income (2019)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State inflation-adjusted average household income (2019)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State household percentage with cash public assistance as income(2019)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State household percentage with cash public assistance as income(2019)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>State household percentage with cash public assistance as income(2019)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States poverty rate (percent of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[States poverty rate (percent of population)]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>States poverty rate (percent of population)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WhiteTotalPerc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WhiteTotalPerc]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>WhiteTotalPerc</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BlackTotalPerc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BlackTotalPerc]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>BlackTotalPerc</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OtherTotalPerc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OtherTotalPerc]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>OtherTotalPerc</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>s_Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[s_Lat]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>s_Lat</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>s_Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[s_Long]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>s_Long</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numbers Of Words</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numbers Of Words]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Numbers Of Words</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numbers Of StopWords</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numbers Of StopWords]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Numbers Of StopWords</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Word Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Word Length]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Average Word Length</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lexical Diversity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lexical Diversity]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Lexical Diversity</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numbers of Geo Location Mentioned</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numbers of Geo Location Mentioned]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Numbers of Geo Location Mentioned</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numbers of Monetary Keywords Mentioned</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numbers of Monetary Keywords Mentioned]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Numbers of Monetary Keywords Mentioned</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numbers of Peoples&apos; Name Mentioned</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numbers of Peoples&apos; Name Mentioned]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Numbers of Peoples&apos; Name Mentioned</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Sentiment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive Sentiment]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Positive Sentiment</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neutral Sentiment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neutral Sentiment]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Neutral Sentiment</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative Sentiment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Negative Sentiment]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Negative Sentiment</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Achievements</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Achievements]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Achievements</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plans, Vision and Appealing Support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plans, Vision and Appealing Support]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Plans, Vision and Appealing Support</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political Adversaries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Political Adversaries]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>Political Adversaries</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F42</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F42]</local-name>
            <parent-name>[trump_rally.csv]</parent-name>
            <remote-alias>F42</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>called</remote-name>
            <remote-type>129</remote-type>
            <local-name>[called]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>called</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final</remote-name>
            <remote-type>129</remote-type>
            <local-name>[final]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>final</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dem_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dem_votes]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>dem_votes</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rep_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rep_votes]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>rep_votes</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[other_votes]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>other_votes</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dem_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dem_percent]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>dem_percent</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rep_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rep_percent]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>rep_percent</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_percent]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>other_percent</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dem_this_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dem_this_margin]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>dem_this_margin</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_shift</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_shift]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>margin_shift</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vote_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vote_change]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>vote_change</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stateid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stateid]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>stateid</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EV]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>EV</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Y]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>Y</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State_num]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>State_num</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Center_X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Center_X]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>Center_X</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Center_Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Center_Y]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>Center_Y</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F20</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F20]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>F20</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016 Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016 Margin]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>2016 Margin</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 2016 Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 2016 Votes]</local-name>
            <parent-name>[Popular vote backend - Sheet1.csv]</parent-name>
            <remote-alias>Total 2016 Votes</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (Electoral College Vote.csv)]</local-name>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Biden</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Biden]</local-name>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias>Biden</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trump</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trump]</local-name>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias>Trump</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Harris</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Harris]</local-name>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias>Harris</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pence]</local-name>
            <parent-name>[Electoral College Vote.csv]</parent-name>
            <remote-alias>Pence</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2016 Margin]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]&quot;' value='Achievement Topic' />
          <alias key='&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]&quot;' value='Plans, Vision and Appealing Support Topics' />
          <alias key='&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]&quot;' value='Political Adversaries Topics' />
        </aliases>
      </column>
      <column datatype='real' name='[Achievements]' role='measure' type='quantitative' />
      <column datatype='real' name='[Average Word Length]' role='measure' type='quantitative' />
      <column caption='Black Total Perc' datatype='real' name='[BlackTotalPerc]' role='measure' type='quantitative' />
      <column caption='1. Popularity Votes' datatype='real' name='[Calculation_582653212336713728]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(&#13;&#10;&#13;&#10;2*PI()&#13;&#10;/MIN({COUNTD([rep_votes])})&#13;&#10;&#13;&#10;)&#13;&#10;+ PI()/2'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Trump Votes/Pop' datatype='real' name='[Calculation_582653212347170818]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([rep_votes]/[population])' />
      </column>
      <column caption='repvsdem' datatype='real' name='[Calculation_582653212349267971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='true percentage' datatype='real' name='[Calculation_582653212355809285]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([rep_percent]/3)' />
      </column>
      <column caption='true2' datatype='real' name='[Calculation_582653212358135815]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Y]/[EV])/3' />
      </column>
      <column aggregation='CountD' caption='Calculation1' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_582653212362240008]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ABS([Positive Sentiment]) &gt; ABS([Negative Sentiment]) THEN &quot;Positive Sentiment&quot;&#13;&#10; ELSEIF ABS([Positive Sentiment]) &lt; ABS([Negative Sentiment]) THEN &quot;Negative Sentiment&quot; END' />
      </column>
      <column caption='Center X' datatype='integer' name='[Center_X]' role='measure' type='quantitative' />
      <column caption='Center Y' datatype='integer' name='[Center_Y]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Day]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[EV]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lexical Diversity]' role='measure' type='quantitative' />
      <column caption='Month1' datatype='string' name='[Month]' role='dimension' type='nominal' />
      <column datatype='real' name='[Negative Sentiment]' role='measure' type='quantitative' />
      <column datatype='real' name='[Neutral Sentiment]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Numbers Of StopWords]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Numbers Of Words]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Numbers of Geo Location Mentioned]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Numbers of Monetary Keywords Mentioned]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Numbers of Peoples&apos; Name Mentioned]' role='measure' type='quantitative' />
      <column caption='Other Total Perc' datatype='real' name='[OtherTotalPerc]' role='measure' type='quantitative' />
      <column datatype='real' name='[Plans, Vision and Appealing Support]' role='measure' type='quantitative' />
      <column datatype='real' name='[Political Adversaries]' role='measure' type='quantitative' />
      <column datatype='real' name='[Positive Sentiment]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Rep Votes (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[rep_votes]' peg='0' size='5.49529e+06' />
      </column>
      <column datatype='string' name='[State (Electoral College Vote.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State adult Tertiary Education Rate (25+ years old)' datatype='real' name='[State adult Tertiary Education Rate (25+ years old) ]' role='measure' type='quantitative' />
      <column datatype='real' name='[State household percentage with cash public assistance as income(2019)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[State inflation-adjusted average household income (2019)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State late adult population percentage (55-64)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State millenials population percentage (25 - 34)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of management, business, science, and arts  workers (16+ years old)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of manufacturing workers (16+ years old)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of natural resources, construction, and maintenance workers (16+ years old)]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of production, transportation, and material moving workers]' role='measure' type='quantitative' />
      <column datatype='real' name='[State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea]' role='measure' type='quantitative' />
      <column datatype='real' name='[State unemployment Rate (16+ years old)]' role='measure' type='quantitative' />
      <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State num' datatype='integer' name='[State_num]' role='dimension' type='ordinal' />
      <column datatype='real' name='[States poverty rate (percent of population)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total 2016 Votes]' role='measure' type='quantitative' />
      <column caption='White Total Perc' datatype='real' name='[WhiteTotalPerc]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Y]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Called' datatype='string' name='[called]' role='dimension' type='nominal' />
      <column caption='Dem Percent' datatype='real' name='[dem_percent]' role='measure' type='quantitative' />
      <column caption='Dem This Margin' datatype='real' name='[dem_this_margin]' role='measure' type='quantitative' />
      <column caption='Dem Votes' datatype='integer' name='[dem_votes]' role='measure' type='quantitative' />
      <column caption='Final' datatype='string' name='[final]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Lng' datatype='real' name='[lng]' role='measure' type='quantitative' />
      <column caption='Margin Shift' datatype='real' name='[margin_shift]' role='measure' type='quantitative' />
      <column caption='Other Percent' datatype='real' name='[other_percent]' role='measure' type='quantitative' />
      <column caption='Other Votes' datatype='integer' name='[other_votes]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Rep Percent' datatype='real' name='[rep_percent]' role='measure' type='quantitative' />
      <column caption='Rep Votes' datatype='integer' name='[rep_votes]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='s Lat' datatype='real' name='[s_Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='s Long' datatype='real' name='[s_Long]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Stateid' datatype='string' name='[stateid]' role='dimension' type='nominal' />
      <column caption='Vote Change' datatype='real' name='[vote_change]' role='measure' type='quantitative' />
      <column-instance column='[Achievements]' derivation='Attribute' name='[attr:Achievements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Plans, Vision and Appealing Support]' derivation='Attribute' name='[attr:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Political Adversaries]' derivation='Attribute' name='[attr:Political Adversaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_percent]' derivation='Attribute' name='[attr:rep_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Achievements]' derivation='Avg' name='[avg:Achievements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_582653212355809285]' derivation='Avg' name='[avg:Calculation_582653212355809285:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Plans, Vision and Appealing Support]' derivation='Avg' name='[avg:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Political Adversaries]' derivation='Avg' name='[avg:Political Adversaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Y]' derivation='Avg' name='[avg:Y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_percent]' derivation='Avg' name='[avg:rep_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_votes]' derivation='Avg' name='[avg:rep_votes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[s_Lat]' derivation='Avg' name='[avg:s_Lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_percent]' derivation='Median' name='[med:rep_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_percent]' derivation='Attribute' name='[pcrk:attr:rep_percent:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[rep_percent]' derivation='Avg' name='[pcrk:avg:rep_percent:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[rep_percent]' derivation='Sum' name='[pcrk:sum:rep_percent:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[State]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[rep_percent]' derivation='Sum' name='[pcrk:sum:rep_percent:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[rep_percent]' derivation='Sum' name='[pcrk:sum:rep_percent:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='PctRank' />
      </column-instance>
      <column-instance column='[rep_percent]' derivation='Sum' name='[pcrk:sum:rep_percent:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[2016 Margin]' derivation='Sum' name='[sum:2016 Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Achievements]' derivation='Sum' name='[sum:Achievements:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Word Length]' derivation='Sum' name='[sum:Average Word Length:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BlackTotalPerc]' derivation='Sum' name='[sum:BlackTotalPerc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Center_X]' derivation='Sum' name='[sum:Center_X:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Center_Y]' derivation='Sum' name='[sum:Center_Y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EV]' derivation='Sum' name='[sum:EV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lexical Diversity]' derivation='Sum' name='[sum:Lexical Diversity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative Sentiment]' derivation='Sum' name='[sum:Negative Sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neutral Sentiment]' derivation='Sum' name='[sum:Neutral Sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Numbers Of StopWords]' derivation='Sum' name='[sum:Numbers Of StopWords:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Numbers Of Words]' derivation='Sum' name='[sum:Numbers Of Words:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Numbers of Geo Location Mentioned]' derivation='Sum' name='[sum:Numbers of Geo Location Mentioned:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Numbers of Monetary Keywords Mentioned]' derivation='Sum' name='[sum:Numbers of Monetary Keywords Mentioned:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Numbers of Peoples&apos; Name Mentioned]' derivation='Sum' name='[sum:Numbers of Peoples&apos; Name Mentioned:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OtherTotalPerc]' derivation='Sum' name='[sum:OtherTotalPerc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Plans, Vision and Appealing Support]' derivation='Sum' name='[sum:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Political Adversaries]' derivation='Sum' name='[sum:Political Adversaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive Sentiment]' derivation='Sum' name='[sum:Positive Sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State adult Tertiary Education Rate (25+ years old) ]' derivation='Sum' name='[sum:State adult Tertiary Education Rate (25+ years old) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[State household percentage with cash public assistance as income(2019)]' derivation='Sum' name='[sum:State household percentage with cash public assistance as income(2019):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State inflation-adjusted average household income (2019)]' derivation='Sum' name='[sum:State inflation-adjusted average household income (2019):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State late adult population percentage (55-64)]' derivation='Sum' name='[sum:State late adult population percentage (55-64):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State millenials population percentage (25 - 34)]' derivation='Sum' name='[sum:State millenials population percentage (25 - 34):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old)]' derivation='Sum' name='[sum:State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old)]' derivation='Sum' name='[sum:State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of management, business, science, and arts  workers (16+ years old)]' derivation='Sum' name='[sum:State percentage of management, business, science, and arts  workers (16+ years old):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of manufacturing workers (16+ years old)]' derivation='Sum' name='[sum:State percentage of manufacturing workers (16+ years old):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of natural resources, construction, and maintenance workers (16+ years old)]' derivation='Sum' name='[sum:State percentage of natural resources, construction, and maintenance workers (16+ years old):qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of production, transportation, and material moving workers]' derivation='Sum' name='[sum:State percentage of production, transportation, and material moving workers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea]' derivation='Sum' name='[sum:State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State unemployment Rate (16+ years old)]' derivation='Sum' name='[sum:State unemployment Rate (16+ years old):qk]' pivot='key' type='quantitative' />
      <column-instance column='[States poverty rate (percent of population)]' derivation='Sum' name='[sum:States poverty rate (percent of population):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total 2016 Votes]' derivation='Sum' name='[sum:Total 2016 Votes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WhiteTotalPerc]' derivation='Sum' name='[sum:WhiteTotalPerc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X]' derivation='Sum' name='[sum:X:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Y]' derivation='Sum' name='[sum:Y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dem_percent]' derivation='Sum' name='[sum:dem_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dem_this_margin]' derivation='Sum' name='[sum:dem_this_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dem_votes]' derivation='Sum' name='[sum:dem_votes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lng]' derivation='Sum' name='[sum:lng:qk]' pivot='key' type='quantitative' />
      <column-instance column='[margin_shift]' derivation='Sum' name='[sum:margin_shift:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_percent]' derivation='Sum' name='[sum:other_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_votes]' derivation='Sum' name='[sum:other_votes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_percent]' derivation='Sum' name='[sum:rep_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rep_votes]' derivation='Sum' name='[sum:rep_votes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[s_Long]' derivation='Sum' name='[sum:s_Long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[vote_change]' derivation='Sum' name='[sum:vote_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_582653212336713728]' derivation='User' name='[usr:Calculation_582653212336713728:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.43026' measure-ordering='alphabetic' measure-percentage='0.515366' parameter-percentage='0.0543735' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Center_Y:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:WhiteTotalPerc:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Achievements:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Achievements:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Numbers of Geo Location Mentioned:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of manufacturing workers (16+ years old):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:rep_votes:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:OtherTotalPerc:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State unemployment Rate (16+ years old):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[med:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[pcrk:attr:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[pcrk:avg:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[pcrk:sum:rep_percent:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[pcrk:sum:rep_percent:qk:3]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[pcrk:sum:rep_percent:qk:5]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[pcrk:sum:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:rep_percent:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:dem_votes:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:s_Long:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State adult Tertiary Education Rate (25+ years old) :qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:dem_percent:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Positive Sentiment:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:X:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Average Word Length:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:other_votes:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:States poverty rate (percent of population):qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Numbers Of StopWords:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of finance and insurance, and real estate and rental and leasing workers (16+ years old):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Numbers of Monetary Keywords Mentioned:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of natural resources, construction, and maintenance workers (16+ years old):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[usr:Calculation_582653212336713728:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:lng:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Neutral Sentiment:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:BlackTotalPerc:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State late adult population percentage (55-64):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Total 2016 Votes:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:EV:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State household percentage with cash public assistance as income(2019):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State inflation-adjusted average household income (2019):qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:margin_shift:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Numbers Of Words:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of management, business, science, and arts  workers (16+ years old):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Political Adversaries:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Y:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Political Adversaries:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of agriculture, forestry, fishing and hunting, and mining workers (16+ years old):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Y:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Center_Y:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Center_X:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State millenials population percentage (25 - 34):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:vote_change:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Plans, Vision and Appealing Support:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Numbers of Peoples&apos; Name Mentioned:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Plans, Vision and Appealing Support:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of production, transportation, and material moving workers:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Lexical Diversity:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Negative Sentiment:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:s_Lat:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:dem_this_margin:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:rep_votes:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:2016 Margin:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:other_percent:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:State percentage of professional, scientific, and management, and administrative and waste management services workers (16+ yea:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' palette=':default' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Achievements:qk]&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Political Adversaries:qk]&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Plans, Vision and Appealing Support:qk]&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Achievements &amp; Popularity Vote'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Achievements vs Votes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column datatype='real' name='[Achievements]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Achievements]' derivation='Avg' name='[avg:Achievements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rep_percent]' derivation='Avg' name='[avg:rep_percent:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Rep Percent' datatype='real' name='[rep_percent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' />
              <size column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:rep_percent:ok]' />
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F75CEBB8-B473-4C0D-BDF6-B2F1511CF58F}' />
    </worksheet>
    <worksheet name='Monetary + Focus Group'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3F9B8C60-7910-4B3F-8ABD-CEEF39B89216}' />
    </worksheet>
    <worksheet name='Monetary + State Unemployment Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column datatype='integer' name='[Numbers of Monetary Keywords Mentioned]' role='measure' type='quantitative' />
            <column datatype='real' name='[State unemployment Rate (16+ years old)]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Numbers of Monetary Keywords Mentioned]' derivation='Avg' name='[avg:Numbers of Monetary Keywords Mentioned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State unemployment Rate (16+ years old)]' derivation='Avg' name='[avg:State unemployment Rate (16+ years old):qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Longitude (generated)]' field-type='quantitative' max='-6053185.9750058204' min='-14101606.450588213' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Latitude (generated)]' field-type='quantitative' max='6762001.4429735066' min='2018296.048253732' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Numbers of Monetary Keywords Mentioned:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:State unemployment Rate (16+ years old):qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' />
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:State unemployment Rate (16+ years old):qk]' />
              <size column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Numbers of Monetary Keywords Mentioned:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7865926027297974' />
                <format attr='density-kernel-size' value='3.3038673400878906' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Latitude (generated)]</rows>
        <cols>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{84089A17-46E1-48E2-ADCB-F83823666FAA}' />
    </worksheet>
    <worksheet name='Negative and Positive Spread'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column aggregation='CountD' caption='Calculation1' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_582653212362240008]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ABS([Positive Sentiment]) &gt; ABS([Negative Sentiment]) THEN &quot;Positive Sentiment&quot;&#13;&#10; ELSEIF ABS([Positive Sentiment]) &lt; ABS([Negative Sentiment]) THEN &quot;Negative Sentiment&quot; END' />
            </column>
            <column datatype='real' name='[Negative Sentiment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Positive Sentiment]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_582653212362240008]' derivation='CountD' name='[ctd:Calculation_582653212362240008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_582653212362240008]' derivation='None' name='[none:Calculation_582653212362240008:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Longitude (generated)]' field-type='quantitative' max='-5141788.4692235906' min='-14625137.426418144' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Latitude (generated)]' field-type='quantitative' max='7333062.3497442305' min='2664637.1361809131' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Calculation_582653212362240008:nk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' />
              <size column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[ctd:Calculation_582653212362240008:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Latitude (generated)]</rows>
        <cols>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DEFBE19C-5E02-40B7-A04F-2F9703163038}' />
    </worksheet>
    <worksheet name='Plans, Vision &amp; Popularity Vote'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Plans, Vision and Appeal vs Votes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column datatype='real' name='[Plans, Vision and Appealing Support]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Plans, Vision and Appealing Support]' derivation='Avg' name='[avg:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rep_percent]' derivation='Avg' name='[avg:rep_percent:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Rep Percent' datatype='real' name='[rep_percent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' />
              <size column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:rep_percent:ok]' />
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D25455B2-7408-4C34-841B-72979282F42D}' />
    </worksheet>
    <worksheet name='Political Adversaries &amp; Popularity Vote'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Addressing Political Adversaries vs Popularity Vote</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column datatype='real' name='[Political Adversaries]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Political Adversaries]' derivation='Avg' name='[avg:Political Adversaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rep_percent]' derivation='Avg' name='[avg:rep_percent:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Rep Percent' datatype='real' name='[rep_percent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' />
              <size column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:rep_percent:ok]' />
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7022D28E-CD79-49CD-B7FA-6A8B5356134E}' />
    </worksheet>
    <worksheet name='Topic Changes Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column datatype='real' name='[Achievements]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Plans, Vision and Appealing Support]' role='measure' type='quantitative' />
            <column datatype='real' name='[Political Adversaries]' role='measure' type='quantitative' />
            <column-instance column='[Achievements]' derivation='Attribute' name='[attr:Achievements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Plans, Vision and Appealing Support]' derivation='Attribute' name='[attr:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political Adversaries]' derivation='Attribute' name='[attr:Political Adversaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievements]' derivation='Avg' name='[avg:Achievements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Plans, Vision and Appealing Support]' derivation='Avg' name='[avg:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political Adversaries]' derivation='Avg' name='[avg:Political Adversaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Achievements:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Plans, Vision and Appealing Support:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Political Adversaries:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Achievements:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Plans, Vision and Appealing Support:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Political Adversaries:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Achievements:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Plans, Vision and Appealing Support:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Political Adversaries:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Achievements:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Plans, Vision and Appealing Support:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Political Adversaries:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk] + ([federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk] + [federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]))</rows>
        <cols>[federated.16xd4bd1kys4tw11z0itw15bee2r].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{E172A975-6BDD-4F9C-9383-E09610E67DF6}' />
    </worksheet>
    <worksheet name='Topics + Popularity Votes in General'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Topic Structure &amp; Votes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column datatype='real' name='[Achievements]' role='measure' type='quantitative' />
            <column caption='true percentage' datatype='real' name='[Calculation_582653212355809285]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([rep_percent]/3)' />
            </column>
            <column datatype='real' name='[Plans, Vision and Appealing Support]' role='measure' type='quantitative' />
            <column datatype='real' name='[Political Adversaries]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Trump]' role='measure' type='quantitative' />
            <column-instance column='[Total]' derivation='Attribute' name='[attr:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trump]' derivation='Attribute' name='[attr:Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievements]' derivation='Avg' name='[avg:Achievements:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_582653212355809285]' derivation='Avg' name='[avg:Calculation_582653212355809285:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Plans, Vision and Appealing Support]' derivation='Avg' name='[avg:Plans, Vision and Appealing Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Political Adversaries]' derivation='Avg' name='[avg:Political Adversaries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Rep Percent' datatype='real' name='[rep_percent]' role='measure' type='quantitative' />
            <column-instance column='[Trump]' derivation='Sum' name='[sum:Trump:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk]' scope='cols' value='Popularity Votes' />
            <encoding attr='space' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.10000000000000001' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Total:qk]' scope='cols' value='Electoral College Votes' />
            <encoding attr='space' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Trump:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Trump:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='jump' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='jump' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Multiple Values]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Trump:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='jump' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Trump:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='jump' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</rows>
        <cols>([federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Calculation_582653212355809285:qk] + ([federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Total:qk] + [federated.16xd4bd1kys4tw11z0itw15bee2r].[attr:Trump:qk]))</cols>
      </table>
      <simple-id uuid='{89C5DE73-F92F-47A7-B99F-61D2CBDD1A47}' />
    </worksheet>
    <worksheet name='Topics + Popularity Votes in General (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Topic Structure &amp; Votes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trump_rally' name='federated.16xd4bd1kys4tw11z0itw15bee2r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xd4bd1kys4tw11z0itw15bee2r'>
            <column caption='State Name' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Trump]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Rep Votes' datatype='integer' name='[rep_votes]' role='measure' type='quantitative' />
            <column-instance column='[Trump]' derivation='Sum' name='[sum:Trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rep_votes]' derivation='Sum' name='[sum:rep_votes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Trump:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:rep_votes:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Trump:qk]' />
              <lod column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]' />
              <size column='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:rep_votes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2307407855987549' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Latitude (generated)]</rows>
        <cols>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D9C1F421-BEA9-45EC-8B04-1B5B7C2560E7}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Monetary + State Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:State unemployment Rate (16+ years old):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Numbers of Monetary Keywords Mentioned:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:State unemployment Rate (16+ years old):qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Month:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6DEFCCE-72C4-4853-A929-EC5FD3284732}' />
    </window>
    <window class='worksheet' name='Political Adversaries &amp; Popularity Vote'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:ok]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Rep Votes (bin):qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DA4B431-6ECB-4E06-90AD-19FE3958B252}' />
    </window>
    <window class='worksheet' name='Plans, Vision &amp; Popularity Vote'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Plans, Vision and Appealing Support:qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:ok]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Rep Votes (bin):qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47D5E174-F41B-459E-B5E9-2079D9AC75F9}' />
    </window>
    <window class='worksheet' name='Achievements &amp; Popularity Vote'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Achievements:qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[avg:Political Adversaries:ok]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Rep Votes (bin):qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1443156-2520-411C-B887-21152B072591}' />
    </window>
    <window class='worksheet' name='Topics + Popularity Votes in General'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:City:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3FB1312-A742-4F3E-B077-A3622B7A5B33}' />
    </window>
    <window class='worksheet' maximized='true' name='Topics + Popularity Votes in General (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Trump:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:rep_votes:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:City:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Trump:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97467107-E7B0-46E5-B3DA-8EB61DBFE929}' />
    </window>
    <window class='worksheet' name='Topic Changes Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[:Measure Names]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[Multiple Values]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:City:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Day:qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Month:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:Numbers Of Words:ok]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[sum:Political Adversaries:qk]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[tyr:Date:ok]</field>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{249C3935-F0E7-4834-9FEA-FAFFF4E47081}' />
    </window>
    <window class='worksheet' name='Monetary + Focus Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{26C908BE-0C44-403A-8833-A45379C30A91}' />
    </window>
    <window class='worksheet' name='Negative and Positive Spread'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.16xd4bd1kys4tw11z0itw15bee2r].[ctd:Calculation_582653212362240008:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xd4bd1kys4tw11z0itw15bee2r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{629676B6-B218-483D-AC70-2538C08401F0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Achievements &amp; Popularity Vote' width='192'>
      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
      21dU/qJs8f8DvlLNbRGh58EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monetary + Focus Group' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monetary + State Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Negative and Positive Spread' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Plans, Vision &amp; Popularity Vote' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Political Adversaries &amp; Popularity Vote' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5hcV333P+feO322zfaiLWoryZIsWZYtyQUXDHZsC1OCcXCAAAESAiSQ
      8JK8IcmbAkkgoQQTYkgBO/TmgjE2Nm6yLFm919WutvedstNuOe8fIySkLdqZnbLrvZ/n0fNo
      Z+4957fS/d7TfkVIKSU2NgsUpdAG2NgUElsANgsardAG2MwPpGUS720nfPgV4n3tJPo6MMfD
      oKqoLg+umma8TSvwr9yIu7qx0ObOGFsANlMipUQfG2T4pUcZfv7HxHvakIY+7T3C4cK3eDWB
      6++m/Lq70fylebI2M4S9CLaZDCMaYvj5H9P7yIPoI/0ZteGubaHqjndTddt9CHVuvmttAdhc
      hJSSaPsROr7xV4yf3A/M8vEQguIrb6DlA5/BWVGbFRuziS0Am/NIKQkf3s6Zr/4fkkM9WW3b
      Vd3I0j/7Gt7G1qy2O1tsAdicJ3hwG6e/8BHMSDAn7TsrG1j2Z1/D27wyJ+1ngr0NagNAvK+D
      9v/4i5w9/ADJwS5Of+Ej6KGRnPWRLrYAbDDjUdr/489JDnTlvK947xk6/vOvsfRkzvuaCbYA
      bBh+/seED+/IW39jO58iuOdXeetvOmwBLHD00Ah9j30jr31K06Dre/+KtKy89jsZtgAWOKM7
      niQx2J33fuPdpxl79em893sptgAWMJaeZPilx0AW4E0sJcMvPUqhNyFtASxgksO9jJ/cW7D+
      I8d3o48NFKx/sAWwoImeOXxZ355cogeHiXe3Fax/sAWwoIl2HC2sAdIi0X+2oCbMTQ8lm7yg
      j06cfihuH56GpZjRMK7aZqLtR1E0Bygqid4zaffhrl9KvPvUlN/H+zrSbjOb2AJYwBiTnPpa
      8SiO0kqE5kB1eXAGqkkOdqOVVFCy/iYUh4vQ4Vco23gb0Y6juKoaEKqD0OHtlKy9AWmZRI7t
      ovjK6wkf3oHicuOqacLfugF9dJDQgRcv6W88X7/upNhToAXM5C7KqV0Z1e3DCI/hKKvCjI3j
      qqxHdXtR3B6KVm5kdPczGOFRjEiQxEAnnvolxHvb0McGUTw+hOZE9fhxVzei+UsIHXw51bYQ
      l9jgyP0vOg22ABYwqts36efJoW4QEO9tR3G4kKaOGR/H0pMoDhfxnjbKt9yFI1CNu24xvqVr
      SQz2YISDmNEw0jRBShSXBzMaxoxHseLjmNHQRBu8RTn+LafHngItYJyV9ZN+Hm0/Cu2pBfLI
      UOqQLHxo+0XXxHtSuzfjJybfRh2cZL0wfurAhM9cBQ6ftAWwgPEtXVvQ/oWq4alfctnrpKVD
      MoI04hAfRSYjYMQuXOD0IzzlCM0LziKEwzNjG2wBLGC8zatQPH6sWKQg/TvKqqYchaQRw+rf
      hzV0FGvkGDI6CMkIWFOdWwjQXAhvJcJfj1K+EqVqDUrp4mltsAWwgNGKyihq3UBw3/MF6b9o
      9Wa04sD5n6VlQnwY48zTWF3bkJFeZh6SKcGII0OdyFAnVs8roGgIbyVq0+tRFl2H8FQiFPWi
      u2wBLGAUzUH5jW8meOBFyLdnpqJQedPbEEIgpYUcOYFx6nGs/r2gZ2lr1DKQkV6Mww/Bse+j
      1G5Ea30rSmnL+UtsASxwSq++FU/9UmKdJ/Lab9GKjfhXbEDGRtD3fx2rbw+Yidx1aCawul4i
      2fsqasP1aFe8E+EJ2DHBNjC68ylO/euH8zYKKG4vyz/1dbzeKPqRb0NsKC/9XoSnAseq37EF
      YJMKUGn/j//L0HM/zEt/1W98OzWry7G6t4M089LnpAjVPgizSW1HNtz/f/AsWp7zvooWt1BR
      M4bV9VJhH34AadoCsEnhKA6w9E+/iqumOWd9uMu81K8rQYn35qyPdLGnQDYXEe85w+kvfYzo
      mcPZa1QoFC1upn61B4d7br1zbQHYTMCIjNH50GcZev4nYM1umiIcTqpvupPyigEUa6IvUKGx
      BWAzJaFD2+n54ZcJH9udthCE5qDois3U3v17uEefwho6lCMrZ4ctAJtUYLo0kCOnsAYPIsOd
      EB8DaWHhIDYwxMjhYwTb+zBiiamD6IWCVlxGyZU3UnnL2/EtuxLzyEOYpx7P7y+UBrYAFjjS
      iGF1bcNsexKilwlQV5zEZTVx6tEjCYxoCKFoqL5i3DVNuKoW4Vu69ry7gdmzA33H58Ay8vCb
      ZIZ9ErxQkRI53oux/7+QoyeZkc+NlcRNJ25XGO2G+xG1GxGXBLicbz4Rxjj08Jx++MEeARYm
      UmKNHMPY/RVIhjNrQyioy+5BWbYVISbu7BhHvotx9LuzNDT3zK09KZu8IMNdGHv+PfOHH0Ba
      mCd/itUxMcenjI9itD05Cwvzhy2ABYY0Yhj7HoTEWBYaszCPfg9r5IIjnZQS4/TPs9N+HrAF
      sKCQWB3PIkNZTEVixjGP/RD567n+uUX1fMEWwAJCJiOY7c9kv92RY8jhVAyx1b8XGcl/st1M
      sQWwgLCGj+XM9dg899Y3u17OSfu5whbAAkIOTMzKkLW2R44j40GskeM56yMX2AJYQGR17n8p
      yXHMnu0QH81dHznAFsACQuby4bSSyMFDhffxTxNbAAuJXJ7KSuui7dD5gi2AhYQ284RRaSMU
      5GwO1gqELYAFhPBV57BxFZTCJrrNBFsACwhRtix3jTu8WWvKsiSmKUnoZto1xKSU6MbMs1vY
      AlhAKNXrU2/qXLRdtS5rC+D+YIJtR4d59sDgpN/HkyYneyZP52hasO3YzCvR2+7QCwhR1IAo
      X4EcymK8L4DqQqnfDGd+kZXmLEuy8+QoH75zMU/u6edkzzh3bKjmid19mJZkdWMxzx8aYuu1
      tQjAklBR7OSX+wdYXldEQjd5am8/RR6NJbU+jnaGed3qykn7skeABYRQHajLtmZ9rq40vx7h
      q8pau4oiaKz0cLInwq5TYwSKHOimxbrFpbxhXTVLanzcflU1LdU+InGDgbEE7QNRbllTyZYV
      AY51RzBMyfrFpTyxqx+va+r3vC2A1yBSSqRlYZkGlqFjGQaWmZpPi8AKlKZbstaXKG5CXfJb
      ILSsCcDnUrl+VTkJ3eKWtZWYpqTY46A+4Ka8yEmZ38lAMMFgMEH/WILxhMH6xaXsbw+x69QY
      d11dQ0u1l/GEiUMVLKmZvBAI2AExrymMRJzRMyfo3PYMwycOMT7QRyI4iqI5cJWUUdK4mMqV
      V1J/9bV4B3+B7N89uw495Tiu/STCX4vUx0k++8k55Qg3GEzQPRJjXUvplNfYApjnpN72Jl3b
      f8X+h/+dkZNHsfTktPc4/cUsunYLrSs1Sj2jl5btmhHCX4e6/g9QihtBCKRlknzhL897hc4X
      bAHMc8Y6TrPtnz7FwKE9ad8rVJUVm1tZs7kOh4hd/gZILXjrNqGuug9xydanvvsBzPan07aj
      kNi7QPMUKSW9e7fz4j/8KdHB/szaME2OvnSEUMTBde++B0fkGIS7Jr/YWYxSvR6l+VZEceOk
      ccCipDkjOwqJLYB5Sv/+nTz31x8lEZy9g1v3vv08E7O47R8fxO1VkeEu5Lm8QDh8CH8Nwl8P
      QpkyCwSAUrY4dc4wjxzi7CnQPCR4to1ffPxdjA9kN8lsyy13cdPffCnj+6Wpk3jqDyE6+QHW
      XMTeBp1nmMkkOx/4TNYffoD2557gxOPfz/h+oTpQazdm0aLcYwtgntGzexvdO3JT1E5aFgf+
      92skQplndFDqNmXRotxjC2AeIS2Toz9+CJnDUkbh7g46Xngq4/uVwHLEZUqTziVsAcwjgp3t
      DByc5eHVDDjxs1lMgzQ3atMtQAaHCwXAFsA8on//TvRo7otaj5w6SnT4Molyp0FtvAnhr8mi
      RbnDFsA8YvhElr04p8DSdYJnz2R8v3D6UZfdk0WLcoctgHmCtEwifRP9bISqcuW7/wjN7WXR
      lhk6uQlB1ZoNl+lrigOxGaI23oioWDWrNvKBfRA2T5CWhRGf3F1hvK+b8tYrUJ0uiuobqVm3
      icEj+9BcbmKjQyiqRvXaq4mNDhPsOEX9NTcipSQZCVG9ZgM9u7cT7r44ZYoRi87KXqF5cKx5
      D8kX/xqMGbpZFAB7BJhHTHUKGxnoxV1ajup00bDpZlSnE0+gEndpgLLFrSDA4fVTvWYDxYsW
      0/bLxwj3nsVXVYfqdFO5at3EvtTZPxpKYDnait+edTu5xB4B5gmK5sAdqJj4hZQkw0FGTx+l
      +ea7GDyyl/Llq0lGQujjIfw1DRjxOJZpEOruIDYyyOLXbyU2MkByPIIejRAbueTkVgg8gckj
      qKSRQAY7sEbbscY6UrmG9DgoGsLpQ5Q0opS1oJQ2ITxlqMu2YgXPYHW+mIN/ldlju0LMI/b9
      z7+x97++mPN+FIeTe/77Z5Q0pvbzpWUiR05jnP4l5tltyEgvGImpGxAqwlOKUrMOdfEtqDVr
      Se74Z+TwsZzbni72CDCPqF67EaFqSDO3ZYfcZeX4quuRUmINHsHY9zDm2W0zd3KTJjI6jNn2
      DGbbM4iKVrTld2AlI8ipvE0LhC2AeURg6Qp8ldWT7gZlk0WbbkLVBMb+h9H3PwzJ2Z09yKHj
      6MOnEIEWhLMYknOnXrC9CJ5HuIpLWX7XvTntQ/N4ab3tVhJPfQr91a/N+uE/jzSRw6ewBs8i
      jfTz/eQKWwDzjNat9+GtyF2Gt+aNV+E58Z9YXTty04GpIyNBhDZ1nG7eEKotgPmGuzTA1R/6
      JIqW/dmrv8TDqoZeGMv8FHhGWCbWyFmUptsRpUty29ckSCkxwkmiZ6UtgPlIy613s/zud2S1
      TYfHw4ZNpXjU8ay2OyVmEuPY42hr34e25j3gLMpLt9KE2JlRQjuPEz+6194GnStIPQZ6BJkI
      IhMhSIbOF54TmgfhDoCzCOH0gbMYaVls++e/4PRTP521e7TTX8ymO9dS4zyNmEnB7CwiAktx
      3/N10McxTj+J1fVCaps1u70giuqRrkWEnvk5Rv+FU29bAAVCSgsZ6cEaOoI1cAAZPHP+wZ8S
      RQNnCYq/FhFYjixbxdFnXmbv/zyANDOLw/XXNHDt+z9ARf93ClbdxbHlT3Bc8TYApB7F7N6O
      1fkC1sD+2TXsLEKpuRq17hrMhIPR//w45lDnRZfYAsgjUkpIhjB7dmC2P40cPT3LAHIBTj8j
      4wH2PvEKQ52jWObMRgOnv5ild7yVte/8EMqR/8Y8+tNZ2DE7hK8a9z0PIrwXTrqltJDhrtQL
      YvBQ6hDNjKf+DS0drHP/bkKkXgyqC6G5Eb5aRGAZSmA5SsUVoHmwwsMMffYezJGJ28f2OUCe
      kHoUs/1pzNM/Q45nlsZkklYhGSbgCHPz3TX0d5dytl3QdzZMdGhiH4rmoLihmabXvZHFr99K
      yaIWZHSQeHtuQixnihzvx2j7FY7VF/yGhFAQmgdFKOAuhao1SFMHaSEdXqhYBecyVaC6UjmK
      nEUIzXVx23qCsYf+fNKHH2wB5BxpJrG6XkI/8u2cZktQFEHtIg81jQpU3IBe8wZCI1GSkTBC
      1XCXllGyqAVXcSmKw3nesc5ofx5ihS9sZ558Eu2Kt6XskhJGjsGpxy4q6/RrV0CRDEHvq1Cl
      Q9PNoDonbVNKSXTHT0kcnLo2si2AHCJjw+i7/w2rfx/kaXEppAWDr+IMnaB27ftQFt05aRIr
      AGkZmGe358Wuy2ENHUNG+hBFtRDpTqVan66mmTShf3fK1XrpXalp0KUYSSJPfCUlqCmwt0Fz
      gJQSs3cXyec+hdW/l3w9/BeRCKLv+iLGvgeRU/njJ8JYQ3PHQc3q2w9mMvXm12cYjzB8BHp3
      TfpVbNfjmMPT+x7ZAsgyUlqYHc+i7/wcMpp5XG12jLEw236Ovv2fkInghK+tUDck5o5fjjV4
      FAb2pb8b1btjgmCkZRF79dHL3moLIItIy8Q89RjG3q+BES+0OeexBvaS3PZ3yEvWIDLcM6P7
      pZSMJ0wMM7cjmQz3QCYu0/o4BC+OaDPH+tHPXj6G2hZAFjHbn8Y49C2wpk9PXgjk6EmSO/8F
      qV846ZVpLH4ffnmAo70X3rKRuEnnyDQxARlgjbXDJCPVjBjvu+hHc6ANa/zyCb7sRXAWkFJi
      9e3GOPjN3BajniVy+Cj67gdwbPwThOqY8RnEeMKisdxF90iSEo/G4/tGuLLRh9uhsO9shJ1t
      Ee5eF2DXmTA1JU68LpUzg3FaKt0oAva0R7h/SxUNAdf0HZl66k8mGBdPgYyBjgtnBb+Ba/XN
      JI68gFJUjlreYI8A2UBGetD3PDDhP2EuYnVvwzz+w9QPM6wYufNMmCPdUV48ESRhWNy8soSW
      ChdJw2JxpZv33VjNcETnHddWYlgSr1PhnZsr8ToV+oM6Tk3QNXr5UVFoLlAzfCdfUgTcik6+
      ttHql6OW1eBsXotWscgeAWaLNHWM/d+A+MxLcxYa4+QjKJVrEJ6yGV1fVeTg47fX0zGcQAAB
      n4amCmpKnDx/LAgCbl1ZyuP7R1i7yEepV8OpKTQEXJiWxKkJ6ksn36u/CF8VOEsyi0G4tAj4
      FCOxOdSJGqgHzYUVj9gCmA1SSsz2p89tdc4jjBj6/m+grbx/RpevbkgVmWuucF/0eYlHo6Xy
      wmfvuu7ih3BxpZvFlRffMx1KaTOUt6bOAdLB4YVLinMI1+SFu61oCLWyCaP3JEpRuS2AWZEY
      xTjxYwqyzz9LZPAM1vDhlBtyMlxocwAQ5cugan1qXz+dsMmaq8FxcSVItbx+0kv107vRVQ2Z
      iCEcTnsNMBuMk4/Oq2IQl2KefRaluK7QZqQQCmrDNaC5YNnWCXP6KQm0Qu21Ez7WKlsQzomj
      gEzGkLEwWAYyEbUFkCkyPobZ8WyhzZgdiTGkMTcOwkRpM+LX8/iiRdD8+pSj23RUroEld4I6
      sT6xGqhFKbt8gl57CpQhZsczme9ZzymSKT+agm7fCrTWuy5kvhMi9XB7KqFvV6pwnxFN+fQo
      KvhqoPYaKGlhqhqviqcI96obGO9vm7ZnWwAZIM0kZk+OgsbzjFAEFFcjxwpX4Fr4q1Bbbrr4
      QyMBegRcxZAouniLOT4KHc+A6gJ3GXgrU6OGv/aiUcN387sYf/5/pxW3LYAMkKFO5Nj0b5b5
      hBJoxIyOQTJP8cCXoK16K8JXlXpQIz0wdARGT06+ODe52O/nNxNtuUpSa4LyleCrRq1qwbv5
      LUS3TV3wwxZABlh9u1JRSa8RZGwQbc07MPY9lPLGzCNK3Qa05hsQA/th+CiEOlLlWTMhEYTe
      nalYgZImRPlK/Dfdh951FL3j4KS32AJIEyktzO5XCm1GdkmGUOvWIVRXKhlWpg9gmigVK3Bd
      8SbEse9meQ0iIdgOwXY01UXgnvcx9M3PYo5NEiWXxV4XBokQMjIzL8p5g7SQY6fQ1tyLuuyO
      vHQp/FU469cgenfkdgFuJlCDhym75Q2oRROTcdkCSBMZ7Z/TDm+ZYo21IRQN53V/irbqLZff
      gpwFwl2Mq2Edipk/3ylHkYvAbbejVdRe9LktgDSR0UGQrz0ByHgQaZkIzYlj00dxXPvh1KFU
      NhEKSmAJ7uZNKNrEvftcIoTAUVxE+Rvvwrvp7vPbp/YaIE3kLCKoYkkTy5L43BpjER2fR8WR
      hUosWUGPpBbAigehOtBW34tSdQX69i9hDR2f9bpA+CrRWu9CI4YooOuF6oCSdavwbnoL4Wcf
      tkeAtNEz3yrcdWqMR3b0IqXk8z89SedgjKOdkz8MJ3siGJPk+BkJJ+kfmzzaLBTV6R7OsB6X
      mbwoPkAIgVq9BtedX8Z5418gyhaTSe1f4a1AW/duXHc9gMPjLejDf96m+AhOMUj5h/7dHgHS
      ZhaJrDRVUOTRONk7zqIKD0LAqb4Iu0+PEkta3LCqnJ9s7+GNV1UzEEwwnjB4as8Ad26s4el9
      AzRUeLiisRjDtPj+S91YEu7aWMNPtvegCPitq2uI6xb15TP0o/nNX8vSJ7zlpZSgOFEatqB5
      GjD7DmO2PQPRLjBjCCHPBZ2ccwYUKqhOhLsEpXJlqjpM3QZwFSG6tqV2ZuYKoyeh71VbAGkz
      wyCSSW8Fmqq8/HLfAOsXp3YkErrF8roiDp1NTa2W1PrpGYljmBYVxS4aK730jcZZtaiY7pEY
      0YSJAK5sKaHU52A0orN5RQBLSkYiyYynVEJxXLTwlYaOfvYAsZ2PkDz1KlZwAKmnRh7hcKP4
      i9Aq63Gv2oJj0SrQnAiHB+GtRBTVpiLOfk2kB3rm4NZx98u2ANLmErfbdKgLuAn4nURiBo2V
      HjwulRX1RYRiBn63SqnPQUI3WdngR1UFqhAkDYtFFV5O9kSoKXVRF3BjGBbPHhhkWZ2fG68o
      54EnzrBhSQnXLg8QTWY4QqlOUNRUjMNoD+NPfpX4np9jjU+MG5aJKFZkBKOvg2TbMdzrb8d3
      +4dRAnUTK1laBnRtm5sHh2bSzg2aLmbXNvQd/1xYGyzJaCRJRbELw5QEx3XKi2cQcTUNIrAC
      541/j955hND3/wb9zL607nc0r6P43r/B0bT2YhEE2+HId5irMRP2IjhNhKd8VtOgbKAqgori
      1BalpopZP/wAwluJOdRJ8OE/T/vhB9Db9xF8+FOY/W0Xyh9JCX17mKsPP9gCSBvhrwMlv3vY
      ecEZIPSjz2B0H824CaP7GKEffSYVcAIp35xgjqvNzBJbAGkiXMUIT6DQZmQZBb2rg8Sxl2bd
      UuL4NhIHn0mNAmOnwcxu7qBsYwsgA5TqqwptQlaRUiF2cAfoWXhY9QTjzz+EjIVgHriM2wLI
      AKV2Y6FNyCqW4cQYyF4Ba6PnBEb3Ych6qaPsYwsgA5SypQjf5eNN5wuWWYRMZC8YRibG0dt2
      ptwr5ji2ADJAOP0o1esLbUZ20LxYyswSZKWDHOm4/EVzAFsAGaK2vBGU2W8/FhqldiOILHt9
      QlZyDZmWxXg8txFqtgAyRCltQalaU2gzZofqRFt6F8JTnPWmhTb7s5LxmM7B09mqpzY5tivE
      LNBW3Euyf/+8jQ9Q6jYhypahVbdkv21/9qZVP3j2IL3DEVY0VaIqguFglCX1AYaCUYaDUXYe
      6eIT913PouqS9O3MmpULEFG2FLX51kKbkRkOP9rKe1OBIvUrEd7sjQLCU4xWtThr7cWTBu/5
      rfWMhWPEkwZul8aB033UlhdhWZKVzZX0DGcWp2GPALNAKCrait/G6t9b+HJI6SAUtNa3Ivyp
      /JladQvOxVeROPRcVpp3Lr4KrW4l9Lw4q3ZcTpXG6lIqS338+LkjbL1hJaOhKC6nRs9QiKUN
      AYaC40SiSZqqJ8b7zgTbGS4LmN0vo+/8l3kTK6xUrsGx5dPna+pKKUkc+hVj//nRWW+HCpeP
      0vd9CVf9IsSv6xDMYewpUBZQ6jahLt1KJhFT+Ub4anBc/bGLCkoLIXC1bsGzceuUqQZn1rjA
      vXErrtbrUk6D8wBbAFlACAVt5b0oddcU2pTpcfhwbPgIwls54SvhdOO/649xtm4hMyELnK1b
      KLrrjxFOdypuwlk0a5NzjS2ALCE0N46rPzZ3/YQ0D46r/xilcvWUlyjFlZTc/4+4r7pj8sLT
      U96o4b7qdkre+VmU4nPiUl1QNHmO/rmEvQbIMjIZQd/1RazeVwttygUcvpQ4a6+ZGLE1CVY0
      RPTl7xF96buY/WeY2p9foFY1473+PrzX3Yty6U7S4GE49ciszc8ltgBygDTiGIe+idn2i1kF
      0WcD4avFce2foZQtSes+aVmYoz0kDj5D4uhLmINnseKp013F7UetbMK14jpca25FDdQjlEkm
      E3oU9j8486rvBcAWQI6Q0sLqfBF934OFcQoTCkr1VWjrPoByaQG5NJGWiYyGLgqKF54ixEwq
      Op5+IlX9fY5iCyCHSCmRoQ6MQ9/CymdooLsMrfW3UVtuQ6gF9leKDsDBb87NoHhsAeQFKSVW
      14sYpx5DjpzIXUfOItSmW9GWvxnhzuxgKOtIC9p+DgP7C23JpNgCyCPSiGP1vopx8lHk2Oks
      rQ8EuEpRW25DbbwJ4a9F5DCxbUbEx+DQt+ZefIDDbwugUFihTqzenZg9O5HjvenVG1McCG8l
      SvlKlLpNKNVXItQcuDRnk4ED0PZE3moPXBahwrKtti9QvpFSgpRYWhlJ3zriJeXoRid68Djm
      SBuKOYYikzi8TjzVdTjLqhGaG+EuQ3irECWNiKJFCFcpwpl5kq68U7k6VQB7rhQVr14HgVZb
      APlAmibR3nZCx/YwdvAVQif2Ex/oQpqX8x06gaOoDF/TckpWXk3p6nr8/lYcRdmP4Mo5QoGm
      WyAehGCBg+UDrdB8GwjFngLlkuToIAPbnmBoxy8Jnz6IGZ3lHFgI3JX1lK7dTOXmN1K+4aas
      2JlX9HE49oNUvtBCULYM2Xw7ya4TJE7ssAWQbaRlEe1uo/vxb9L/wmOYsdwt/PxLVtP4lg9S
      fvXNqC53zvrJOkY8dT4wciyPnQpMZyXjgwbjL/8Yo+dk6lNbANkjOTZEx/cfoP+FRzEi+Sui
      Xdy6nkVv/n0qN70hb33OBGnEkfFIqvyqw4Nw+hCuc+sWy4Dul6F7e85Py6VlMd41THjvqxhD
      F9dDtgWQBSzTYHDbE7R/50vEeguUDUEIKjffzuJ3fxJ3VcOMfH6yhZQWMjKI2X0Aq2sfVv8x
      rKE2ZGwslR8UScrDVIDmRClrRKlcgrroKtSSckTwJCIxkn27EBjBEKOvbCfRNfn/iy2AWaKH
      Rznz7S/S98yPsJKTV27JJ85ANcv/4O+o2HhLzvuSloF58jn0w09gnd2DHB9KvxHVgVLejFZW
      gaO6AZGt2mHuAPGROMOP/g/W+NSjsS2AWRDtOs3RL3+S8Im5dcopNAeNb/kgTW//cE6K0Uk9
      jnHiV+jbv4E1cDJ7e/tOD45Fq3A0rkLRtPTziqou8FUhK9cRazvJyMN/hYxPH+FmCyBDxg7v
      5OgXPkFiaO6m/6u/810sftefobrSL5k0FcbZXSSf+zeszt1Za/NShL8K58a3o6+5YrIAAAvC
      SURBVNUvR0QHUyfJyeDFIadCBc0DTh94q6C4EYoawFNO/PgOhr78XmTi8l6otgAyYPTgKxz5
      /MfQg8OFNmV6hKBi0xtY+cefn7UIpB4j+cr/oL/8dTBym6wKAEXDsfm9OLe8P1VuSZopAUgT
      EKmKNkI590c9H8qp95xk8EvvxRyeWa5TWwBpEm47woH/93tz/+H/Depu/x2Wvv/TGU+HrPFh
      Eo9/GvPUi+S32IVAXXojrrv+FsV3+RhjKxlj+CsfJH5k5tko5pjX1Nwm1tfJkX+ZB2/+S+j5
      xXfp+MFXkVZ6c3UpJdZYF/EffwLz1Avkv9KLxDz1PPHv/SHWWPdlr46+8khaDz/YApgxZiLG
      8Qf+nFj33K54MinS4uyPvsbQjqfSu218iPhPPol1dleODJsZVu9h4j/4CFZ4cMprzNAwoZ99
      Je22bQHMACktOn/ydcYO7ii0KRkjDZ1T3/h7Yn1nZ3Z9PEzi0b/A6jmQY8tmhjVwgsTP/gqZ
      mHiyLqVk/OUfYQ5ffpS4FFsAMyB0Yj+dP/0Gc7nY20xIDPdx8ut/i6VPv4iVlkniV1/APLM9
      T5bNDPP0iySf+zLSuuTk2EgSffWxjNq0BXAZLD3Bmf/9V8z43A3sToeRPS8wsuf5aa8xjv8S
      Y9+P8mRReuh7vn9uPfIbn/WeQj97JKP2bAFchsGXf8HYwTlY5TxTpEXbQ5/HGJ88maw1Pkzy
      2S/CpW/ZuYJlkHjqs1jjFzYiYgeeTfswTjjcqGU1tgCmw4yN0/XYf5/zZ3ntEO1uo//Fx7l0
      B1xKif7qw8ix7NULywUy2IO+69vn7U+e3pN2G0pRAO+Wt9oCmI7hXb8ifOpgoc3IPlLS/fg3
      sRKxiz8O96Pv+i7zYa2j7/oOMtSH1BPonRm4VUuLZNs+WwBTIaWk5xffKbQZOSPadZqxIxdn
      r9P3/wQSsy9tlBfiIYwDj2CGh8/nK0oXc7TPFsBUxPvOMnZ4Z6HNyCk9Tzx8/u8yGcU4lNlO
      SqHQD/wUKzyMNNPPOWSNBzGDA7YApmJg2xOvubn/pQSP7iYx3AeA2X0AGZy7jn2TIUP9mGd3
      Z7Rgl8kYMha2BTAZlqEz/OqzhTYj5xjjIcYO70RKiXnyOcjgTVpQLB2z7aWUQ1yG2AKYhMRw
      H9H56PKQAcEju8DUMbvnxolvusiBY8DMt0DVQB3ea+4+H5ppC2ASop2nMCJjhTYjL4RPHsAM
      9mENHC+0KZmRDCHMGbpnKyquFZuIHXwONA2tqtkWwGS8Jrc+pyDa047e3wZGmtFXcwSBheqf
      WSUa4fZhDncjY2GQEt/1v20nxroUKSWRjnn6NswAMxYheuwl5nhixWnRikvQxy6fhUPGImgV
      izDDoyjeYhKn99ojwGQkR+ZRydMskOjKruAjCZMnjoXpHNMZT1pEErl1q3CvuHZmF0qL2P5n
      UXwl6N3HsSIj9ggwEUlydIEJoL8dvNlpy5KSp05E2NDg4eX2cdbUuokkLZYEnESSFn6ncu46
      qPBpsypK+WsclQ1oNUsw+k5f3r7ICMmTqRQsydN77BFgApIpHcUyQXE4qX7dm6i97V4cJeX4
      W1YBoPmK8TUuv3Cd04WnPnvV1dMhmxFuhgVep0JjqZOGUgehuMnhvjiPHA7RHzHoDRs8ciTE
      z4+FGYxkp66ycHrwbX5zRvfaI8AkmIns5ffx1i8hdOogenCY4mVXIi0TT10L0jTQikooXnEV
      ntomRva8QOkVGylauprhV58lsO4G9PAo0Z4zlK3ZghENo3n9DO/6FYH1N6AHRxg98HJWbJSo
      ZMv/R1MgplucGErQOaZzZa2bGxf76BhNnTHopiTgUXE7FOJGltKpqA68W+4m/Oy3sILpjd72
      CDAJkxZ8y7QtTcNKxlNBKIqKr6kVf/MKzHOOaM6SctwVdfgalxEf7GX8zDEC628k0nEcxeXB
      U9NE6PgeFIeTSNsRXIFqVG8RZeuugyzZKbzZqyajCMEblhfRHdS5cbGPpjInNUUO1ta6WVbh
      orXKxeJyJ1V+jUWl2SnfJDylaGU1FN323rTvtUeASUgVf8vOtmC0p53q170JoSgM734OKxFF
      aA6cJeVIw8BRXIYRi4CU6KERzGSceH8ngfU3YOlJQsf3YsTGSY4NYSXjqB4/mtuLEY0ghMjK
      e9tRswxi2fN78jkVblnqn/DZr1lbm708RQCitA4A/82/S2z3z0memXmiMjstyiVIabHjQ7cS
      7+8stCl5Y9k7/4iSk/81d6q3pIPmwvvBR1FKU0W5k2ePMPiFd2GFZ7ausadAExC4ArMrKzrf
      cDUsR5Q1FtqMjFDKFiE8F6ZwzsZVlL7j06CoM7s/V4bNZzy18/NhyAih4GlYjtqwrtCWZIRS
      t/ZCyvVzeK/ZStn9fweOyx/v2QK4BCEE3ob0qqrPZxzFZThLylGbNhbalAwQqI1XT/xUCHzX
      30vgPf+M8EzvJmELYBKKl68jKyc08wBvXTOqx4fasglmkH5wTuEuQm2Z/BRYKAq+a7dS9akf
      4GheO2UTtgAmwV3TiKM4UGgz8oJ/8RUoDidKUTXa0tcV2py00FbchlI0/XrNWd9K1ccfovjO
      P0K4/RO+twUwCe6KWvwtKwttRu5RFMquvO78j44N98548VhwNDeO9W+b0aWKt5iSN3+C2n94
      Bv9t70WtaLjwXa7sm+9Ubn5joU3IOc6SckpWXZhDK1WtqPNkFFCX3oBSnd5LSi2pouzeT1P9
      l49S/gdfxX/re2wBTEXV9XcitOycVM5VAutvxOEvOf+zUDWcr/sj8JRMc9ccwOXHddNHzx1Y
      po/qL8O74Q5K3/FXtgCmQvMVE1h/Q6HNyB2KSt3t9034WK1ajvOadxXAoJnjuPqdKOUts25H
      CGELYDoW3fO++TMnTpPSKzbib558CuHY/F7Uls15tmhmqC2bcV73/qy1ZwtgGoqXr6NkxVWF
      NiPrCFWj7vbfQXFOflAkVAeu2/8SUVybZ8umR5TU4br90whH9nyJbAFMg+Jw0nL/xzOea85V
      SlZdTcW1t017jRJowv22L4J3jmwHu4txv+mfUALZPaW3BXAZSldtvOzDMp8QmpOW+z8xo3ph
      Ss0q3Fv/AeGryINl0+AuwX3PP6HkwF3DFsAMaLn/EzgDVYU2IyvU3X4fxcumPhn9TYQQqIuv
      x33vA4jimhxbNoUNZY147vsPtCU3IHJwOm8LYAZ465ppeefHZ5WBbC7ga2ql6e0fRqSxsBdC
      oNZegef+/0Zt3pRD6yaiLrsZz+88iFq3Omd9zO//0TxSc/NbqHvDvYU2I2NUj4/Wj/wjzgxd
      PJSyRbjvfeDcOUFZlq27tDMN7co3437L51FKGy5//SywA2LSQA+Ncugf/5DgJWnF5zrC4aT1
      w59JRaZlYRphjXaRfOErGMeeznJCLYFSsxLH5vehtd6al80HWwBpkhgZ4ODf/z6RtsOFNmVm
      KCqLf/cTLNr6PoSavTMNaVlYw20YBx/FOPwEMjx4rop7Brj8qHVrcWx4B2rLZoQzuyGT02EL
      IANifWc5/LmPEDk9t0UgNAfN932Mxjd/IKuB/pciY2OYXfswO3Zhdu3BGjkLsWlyqzq9iOIa
      lIolqM2b0JZcfz6kMd/YAsiQ+FAvRz73UULH9xbalElRXG6a7/0oi9703ryeY0gjiYyHIB7C
      Cvak6vrqUUAgvGUIXzmiqArh9E+I5CoEtgBmgTEe4sSDf8PAi4+DNXcCyp3l1Sx7/6ep2PTG
      nGwdvpawBTBLLD1Jz5Pf5sy3v4AZGy+sMUJQvGwtyz/8GfxNrYW1ZZ5gCyBLhNsO0/atzzG6
      /+WCpBdRvUU0vfVD1N/1blSXO+/9z1dsAWQRK5lgYNvP6Pj+V4n1tuelT8Xppvp1W2nY+l58
      i5bmpc/XErYAcoCVTND//CN0P/Ew42dPIM3sJIH9TbSiUqq23EHdHe/E37wi6+0vFGwB5BAz
      HiV8+hCD259k8KWfkxwbnF2DikLJiquouv5OAutvxFPblB1DFzD/H4X2kyz/LZF6AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Topic Changes Overtime' width='192'>
      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
      9NVu/ui3d7OppfIKU1NVBeF4mvGZyDwmwXEfTz35HNgK2HTLXXQsMApvMd2gvlCcf9h3hHFf
      hN97aDtdLYu7gXouIvE0P36lm4OnPXzuno3cu6P5urw4S0Eknubnb53mjWND3Laxni/e24Vj
      HhNHIQTvnhzlO88uvctzoTz2Wg+vHOrnL7/xUapLnYRiKU4OTHO4d4JTg14yspJdATLJGBNj
      Axzr9bJzayeFrrIFv9UWex0gLcn87PVTvHJogIdvm3X5zcdnng+EEIxMhfnrJw5g0Ov540f3
      UF9euGqiYVUh6O6f5ge/PI6iqnz1Y1voaq7MOhrMhBP8b995jft3tvCZO9YtobQLJy3JfPfZ
      o5wdmaGuvJA+TwCAjoZS9m6sp7OxLLsCRGc8HOvpQ1ZVdDo9azq30FhZtCAhlmIhTFUFR85N
      8J19R2iqKub3Ht5OaZF9Uc8pKyqvHRnk8dd62NlZw5fu68JpX9meqbmIJTM88cYpXj8yyEe3
      reHTH+m86tbFjKTwl4+/i6oK/vPn9q6K4MhESuKJN06hCMHudbW01pZgMX0od04TKBEa5fCp
      KNvXWTjSq+O23c0LEmApV4I93gjffuYQ4ViK//DpXbTXu/P+NhZCEEmk+dFL3Rzrm+TffHQD
      d25uXLJRZ7FQVcHpYR///MIx0pLMNz6xjY3N5Rj0+kuf73u3l+cOnOP//dpdVJc6l1ni/JBT
      AeRUmH1PPYuKYMMdn6Kjev6rbLD0oRDJtMSPX+nmne5RvnL/Jj6yuTGvMTHnx/z8w77D6IDf
      /+QOWuZwCqxW4skMT79zlpcPDbCrs4bP3r0Bd6Gdfk+A//r9t/jmJ7bNK63JaiGrAgghUBUZ
      n6eft/cfoXXXR9nSWrWgEyxHLJCiqLx+dIgfvnyC3etq+drHtlz3ljxFVfnV8WF+9Eo3m1uq
      +MoDmxaU4WA1oQpBvyfAv7x4nEg8xcO3dfDakUFqy5z8/sM7ljTIbrHJqgATZw/y2PPv0dhe
      RyJcwpe+cNeCT7CcwXD94wG+/fQhhIB//6lrf1uHYyl+8upJDp7x8Lm7N3D/ztY8S7oyURSV
      Z97tZd/+XtyFdv6fr96xauc5c5FVAVLRAN0njtM/3M/Z8zG+9h++TkPZwmy/5Y4GDUaT/PCl
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Topics + Popularity Votes in General' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Topics + Popularity Votes in General (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nN29S4xkSbom9J23v5/xzMiKrOpO6qqrb9P3jq50d7BAsIHZIGYGgcRiFiOG
      2YAEi5FYsGCH2IBGLFkgwYgFGjaIBRILFmxozdXtbm5RXV2VWZkZGRHuHv728z6HhddvaW5u
      dl7uEZk1nxSKCPdz7Pmb/Q/77f+1m5ubNE1TqKBp2t5n9LymadA0DZZlIQgCZRkyRFGExWKB
      wWCwU9YxoeqX53mo1WrK91Tt4Pv9KSKOYyRJAtu2WVtVbVaNDT1Xpa9pmrIf1XtJkqDVau2U
      n6YpPM9Ttsk0TURRVLgdRdsKAGaRh/nO8I2kz03TRBiGpRpg2zYcx9kpW9f1nQk4hNBoImSf
      h2GIRqMhfY9fiGIZYls/Nei6jtVqxRY33/6sftH3/N88IWfNg2qcsxaAYRgwDANpmiJJEmia
      BtM04fu+lI7iOH60zVE6i9RpVaXi50mSQNf1nR0gSZKdH3GQ0jSFruvYbDY7nz3FLktla5q2
      s+jK1JvFNbO+K/L9IVARo9ivrPk9dA5U7xmGgbdv3+Kbb77BcrlEHMdYr9dwXRe6rqNerz+K
      JCCCHyNd1eCsRSAOMr9qVTuCDM1mE1EU7Tyv2rVlP4eiyEBnEYn4Q4s9C/yzj7EQxMUsLnD6
      XJxf2dgemxjTNEWn08HPf/5z3N3dwTRNOI4D27YRhiHCMGTc5zFB46LrOsyyHaQG8u/RpJdt
      PA3IdDqFpmkYDoeMOKg8USYV2yIrs0i9fLtV4DmF7HlZXUVFo8fY6XRdh+u6aLfb0u9J3Miq
      lzh5UYgiYpF3a7UakiRBFEVMXKOx9X2/cN3HgJm1E6kUItolaLJpYMV3ixCMpmno9XpYLBZw
      XReWZRVufB4ByxDHMaIoUr4r60vZ8vPeFxVUYH+sRZRVRrPKEOuVzV2eOEqf0YIR/5eBxsYw
      DNTrdQRBAMdx4HkewjCEaZqV5vQQmJ7nZVpwslY0iS8i0WqahuVyiVarVbghmqZhvV4Xfr4q
      aKIeHh4evS4VRA5K/5cdMxk0TcP9/X3ldhWF67qwbRuGYaDRaOzocirouo6zszMkSYJ+v4/J
      ZALLsti7ZQ0pZSFT/M1Go4Fms5n7sAxhGCJNU9i2vVMoyVedTqdw47IUblGuFTmRivUeasEo
      K4tSfSrLkdhm/ntN02DbNvr9fqk6i0Jm0Sqj8MssQuPxGCcnJ0yUVekOtKuTxLBYLGBZFlzX
      zdx8ZfNa1DqV1Re+fJNnx1msM0s55dkWTwRl2ZmsU7yopapfhSLWGFW/qoBvq6hn8OOSpWiq
      6paJJFVFtbL9K2LqlD3D01aSJIjjmH2n6zqiKMJms4GmaWg2mztWQ2BrNaIxi+N4z1hSRX/l
      2wVw5wAqIjcMA7Ztw3XdwhVVaVyV96qYLx8b/O7EbwDirnWIqbHsOB2yYxJknHi5XGI4HLL/
      VZupOA7AVny+vr5m5tD7+3tomoaTkxO0Wi0kSYL3798jSRKYponhcAjbthFF0UGHYmI7Tb5R
      MliWhSiKpAukqhUmC3mTeygLFMs5NrLKFft2aPvzyuDbwo9Z1Z1TxHw+h67rOzu7qp1ie6Io
      gq7raDab0HUdg8EAmqbhzZs38DwP6/Uaz58/h2VZSNMUNzc3WK1W+Oyzz2AYRmadRcEWgNhQ
      8SHS3ouaIg9tlGy3VC22LHlbVT7/+ymRJfZUIcwim0WZ58tA0zQ4jrP3WRXxij8LOjs7AwCc
      np6yk2Fd13F5eYm3b9/i7u4Ol5eXaDQa0DQNYRgW5giyzamwK4RK2dyRpzgzVtGBFmVjsVz+
      O5XJrgxE2Rz4OG4Nokyfp8sU5SpZOPZmJdPxVEYAlQgoIk1TGIaxI3InSQLf93F1dQXf9zGZ
      TLBarQAAP//5z6W+Qry7hcy6RO3I1QGok7LO8hOj6zosy4Ku6wiCoNROoFIQRTZ/qBJ4DCI6
      FKrFrlIoq+yqYl2PBZn5W6xXVT+9K9u9ZeJNmqbwfR+O4yCKIpyenqLX6+Hrr7/GcDjE5eUl
      oihCHMcwDAO3t7cIggBffPHFDl3xCrWmadsFILO88J0qIm/xO79pmrkDLxIxyZIyDsNbV/jP
      f4oLIGs3l7lSaJqGer3O3uG9JvM4VxmRsMpYknyeV7f4TLPZhGlu997NZlPq9DcIAlxdXbGd
      /auvvsJ0OsW3336L6+tr+L6Pd+/e4fPPP8dkMsFoNILneajX68wLuN/vM7Feu7m5SVXytW3b
      SJKEsRCRhdE5AK3mZrOJzWYDXdcxn88LHepo2vZksNVqYbPZKO3C/GTT30VEF5lYBexzNJko
      VlYuN02TyaVloes6ptMput1uZvm2bbODo7z+e56Hu7s7nJ6eMg5NYoGmaZhMJrBtG7quM5m6
      DHzfR5IkqNfrymfS9IPfk2maaLVaMAwDvu8zGf+Q019yolsul1itVkyhJuuR7/uwLAu+78Mw
      DMznc2w2G2Zi3fEFMk0TlmWxBtMAZynA/Ock+hDHyNtZeaKjzqie41HFDJhVpih6VYFlWWi1
      Woii6NFONIlDOo6zc4Ka9XwYhlitVoy76LqO9XqNTqeD+/t7nJ+fw/d9zGYzXF1dlWqPaZpY
      r9eZC0B83jAMANvxJ+W3jKjG0wi94/s+bNvGcDhEHMdsEyXrZRAEzCw9GAwwHA7hOM4HKxDv
      00PsiFgUeejJlE/xc37iW60Wlsul0jGLygC2dwM0TSvlSEYDUPbcIIvll7Uo8bAsi3FEmZnu
      2PI4zU8eTk5OcHd3h0ajgXa7jc1mA8dxcHFxgdVqBcMwmC9WWRiGUcom7/s+I3resFFmXGTc
      WSY688/zYrZlWajX68x7wfR9H2m6vZHTaDTgui5qtRpqtVqu5k7f8XcBeNABWtYOQSKDbdtK
      XUNFtEWIWWWRENuQxyX4z4h9RlEE27ZhWRbiOMZms4Fpmnu28WNZaUgRNE0TcRzn3pSq1+ts
      Lm3bxmq1wtnZGeI4RhzHOD8/Z0TBu7OUAZ0TZS1IftzF9pblvPy85lmUgC3Rm6aJWq0Gx3HY
      3LFFUavVMJ1OYVkWbm5uUKvVsFwulR3hf/IaXqvVmB1XVhb/23VdpblK5tPOg5czxc95lPHB
      58ukNjiOg1qtBl3X2c0m0oVc12UuviIxFN3liiwUcikgcYbGxrIs1Go1NBoNJmbQ98Rhu90u
      LMti9vtGo4FarQbDMEp54fJot9sHOxbyGynfpzxkLR4ak263i16vh2azyayUO2I/uSAvFgu0
      Wi2mBxRRAPMmluSuIlA9lyeWqJTcKuKGqvw4jtFoNNiljSxRjRcjy7ZF1n5Zm4jbkCcmLUhe
      95rP51gul2g2m8xRzfM8JEmCRqPBFjbvgVpW6ae6VDoPEWgWDajqy9MdixI/GSZUMOv1+p43
      6GAwOIq8Sjui67p7p4aEIma4Mqa6Q2zmWeWVUW6L3IPIqov+zhuTKIqY5YOXgzVNg+d5uLi4
      wM3NDRzHwWg0QqfTge/78DwPnuft3I1I0xSLxQIvXrwo1FaCYRi5C6AqVCJvHvGbplmI+AFA
      Fw8JijRaJpao3jk9PUWapnvOdPzuwO8SVVifrM2z2QxhGGK9XiutJUXsz9Qesiw81XlBUdAm
      IxsPMlPO53NmEpzNZjAMA47jMLGu2WxivV6XjuxBddFd3qxnVPfD+QPUvHeL0KdhGIWJH8hw
      hcgSb8qaIOv1OsIwxHK53PEb53+rFGmxLLENvDWBf2axWCBJEmw2G9i2jdlsxhRUz/PQarXw
      /v17fP7555hOp2i321itVojjGKenp5hMJswDsWrfD0EVcYRHr9fDcrlkJ6RBEKDRaODk5ARk
      +Oj1ejAMA5vNBs1mM9Nil9XOh4cHXF5eluZ0ZJEh0+yht8Fo5y+j0O+4QhTRqvPkcBnSdHsI
      QjeHRKtQ0YkWLQAyWz7BNE0EQcB2vmazyZRVikU0GAzY0fl6vWZKre/70DSNmQz5Op8Kh9ZF
      dnHgA6ER6vU6CwtD5wpVF1ySJOj1erkyuwq83sL/JhRdVI7joN1uM2VeZumTYccbtMgCEFFm
      0AzDkFpKih6WlZGRyc3WcRwEQYDNZgPLstBoNBhRbzYbZs3hCZ3uQBDRHLobF0WWcp3HIYuI
      o48BXdcRhmGuu4xs/GS+/UXbzt9FrtVqzIADYEfcojFVmWn3Ps3b/VW28aKNb7VamM1m6PV6
      0h296ADkyZx89DGyhZPeQu+SfiLWSX7qHwOyMXgM5V88FKy6wOl+L7+pVV2AorEjb7GTFYxM
      uUT05GahaRparZZUUiDdYmcBHKK1F10EaZqi2Wzi/v4e7XabHbjxZajKVxFHkc/EtuWZ0j4G
      nrItsttqVeH7/o7+UKYfvDGFCDiLm/F0QLs/sDVSBEEA13WZCwTpm/w1VVogdG5j8kpkEeKl
      RoidEMWTLJBTFF2KJtFEhGxn4v8XD9NEAi/DUVT1PSVUC5LvZ5WFS+cEeXVX7XveKbBsB9Y0
      DbYG2KsZzM0S0DSErS68egtRssuZZH19eHjA6ekpU56DINixMFGdJJqRmTgIgh2Fu5hDiQCZ
      wiISZt6A0/mDpmlYrValLUv0mwZJXARZBywiQf3UUHYhOI5T6k53WdTrdcznc+bJyreNrGmT
      yQSdTmd76myasOIQjTd/hLmcgWbAHr2HfvUF1t0TJOkHRzf+DInKrdfrufeDidBN08TNzQ2z
      EO0YS3hiKDKYWTs9T4RFyiOFmI7u8+qT7fRUF7HSPLmxyjkD8GkGwy26EIrM6yEbgeowLI5j
      jMdjdDodPDw8MJcMU9dxOb/fIX4A0NIEtbs3iJodvJnOmfmW7g8sl0s8f/68MJ3yu/7p6SkW
      iwXzAiXoAJS+Fyr2xSsRKhmt6ICGYSg9Jc6y/vDPiJ/JnhPbnoVPTS84hgL82NHW6CBLFh6n
      0+ng/fv3aDQajF6aOmAup5D1TA8DmPMJer0egC136fV6CMOQHexVmcc0/RCGkw5ANU3bFYHE
      HZT/nwie/65er2M2m7FYjwB2FI6iXCAvHmWe9UkF1cIoujiznlOFg1SJhVXqO5Z4xsfXeQzw
      Ignt8sBWNzg5OWF3BmijteMAWobZ1AwDFjeUnDN1XUe32z2oH2maotvtsgPSJEm2IlARFipz
      7yXlg1ds+O/zGqtp28MmiiAnrtjHZt2q8oouLFX7DrWqiO3Ja0cWSLzMEw0PRaPRYGIOXzZF
      f96BniLVdWixIj6rvT3UIsmAP6OhjfYQayUZYfY4wGKx2FMi+Uvx/GDxDlT9fn/voKaIIqxp
      WiF7e569WlRsi5pFjw2Z2CW2IwtlnOiK9oe/AJ7FEfM2KlWdvLUly/DAvx+ZDuJWF9p8sicG
      JaaFoN1TusaTA6Dq6mhRczw9Y5I9NE1TtNvtnQsDtOJksh2h3+9js9mwgyd+hRaR0+jansyH
      nn9OxWHEZ6l9YpuPuQCKllVWHJrP53v9lJUhMw+q3knTFMvlkh0Uqfogs6SJVjZ+TvnvgA/3
      FESIcwMACQD38gUaUQhjvWCLINU0+GfP4Vs1pNyGS7+n0ykcx8n1Vs77bqdNt7e3KVlRxAd5
      TZqH+Oxms4Hneej1eoWc2gie5+1c2JARCU/8ssFU/S8uABWqiABVFOU8K5Ku65jNZqUCCpcB
      3dzKa3cRa1ciIc7VasXuKheBBsBMItjzBxjrJaDriFpduK0eIokISRahrNxuZcRmpqcQcclO
      4IoSUaPRQKPRwHq9LuVC4DgO89ZM0xSz2QztdnuHGxRZ6SqxKE9WV72bh7Icparp9dgoe4dX
      Bb7/mvYhrH2ZW2UpgFA3EfbPoA3O2ecqUYrEniKidW7d3ALT6QNe3OFNnCIbzNqFy07ger1m
      cW7oAv1sNst1ClNxK9mP7LmnxjGsToeAbvnlEX/V+jebTSVXamD3imfezTHV/Q2ZCFy0L9IL
      MTLiJ4jyOIEua5dBu91Gv9/HfD5n4lOtVts5tSxqAuXbTgMq+15cBFmWnI+xWB4DdJut7Pyo
      IMr+vV4Ps9mscllA/nj3+314nrdTvyi6ixt1njiXpul+lkjV7sl/L2swRd/KeldGyIZhsEhd
      FORIfEe1qlU6Q5HP+O9k5ldxMzgEKk70VAuMxq7qxfc80H2DyWRS+t2iu7XMECMaBcqAxb4C
      domg7MSkacoOOIoQi0jQYuNN04TrurkdKtpOnthUC0kkSBnBFr2Sl9fWLBHtsUSgNE1ZfKcs
      lKlflAps20az2ax0rbIoioReUX1OHIHJ/hSBosiOnxWxIU1TrNdrFmmAKstqkGhyE3fgVqsl
      DbVxCIHkyYZFiPvQnbtI+ccEXx7fbyIE3tZe1RhwDBBximFRxJ8ql25EwhdFo737AEUg7mZx
      HKNer0utRjJ5W9w9RFiWxa40qkyksvLpc37HE+3Xsnf570WFSvadmBRcZMUyTiJzERF1rGOF
      VEySBG/evEGr1UKv18N6vUav12OR2ejEdrlcotfrVVZg+XE8NvcSy/M8TxlZhH9H1Q5d12Gk
      KYw4RKrpiE0LURyX9wYVTWBpmrK7tGWRxXVED1HZIKvepyCo/MSKMiP/m39G/Fy1a6vaIlvc
      RRS9Ij77RaHrOlqtFjzPw3g8ZgEAyAxKsfPJhMm7K5Ql5Cyr4DFhmiZTgvMg0oppGGiMb2BN
      bqGHIVJdR9xowX32hTw8ehZE8cV1XRZZmBaEanfO0srFNjQaDcxmM3ahPctlmi+DJtg0zb3z
      hLx+ytqXp9SLXCKrj1llFelfUZBeRmEBKXjscrmEpm3dTyhqsuwiUlk8JuETKKWSCnTTK45j
      1Go1diWy026jefM9nPH7D+1NYuiLKYz1stqFGALv5ccKzxgM2S5J/8veI3+P5XKJbrebubiA
      rS/TarXC8+fP9+pU1V0FRMhiRshDyxY3kEPK6ff7TDkl2bnT6bCFQdcGn4J4jwHDMLBcLpUn
      wYZhYDqdMt0mDEMYhoETS4c9uZO+o8fRBzNoWfMlvVNm51JZW/IUZt6hC9iu9tVqhSAIWJZx
      13XheR6ePXuG0Wi0VyexfBXy2iCDeAXvUyEmPuw4hUIEwPIDaJrGYiQds92PZdal+RsOhxiP
      x9hsNlJLHblQ08UXANtLN6latNzhKSplUzZAvu8XjgsvQpQb8yaAMpGMRiMsl0vc399/CG/9
      YzYay7LYrtdsNtkJM002Hw5F1p4sxVz8XhQDxT5l9TvvuUOsTMB2J/zhhx/w9u1bFhkvSRKM
      RiOWQoh8tyaTCZIkedTrksfGyckJHMfBw8PDnkjU7/fRaDTQ6/XQarW2V26TbMuRNE1qEYU4
      jmNmoZGtRtln6/UarVYLo9EIJycn7DLMZDJBv99nO5bYsXa7jdFoxKIbt9ttpcKYJAkcx9lZ
      nKpys9pL74l/qwi+qOiiEuGoDeSTlWe2zYJt27i8vMT9/T0Mw8BoNIKu67i7u0OapqjVamyD
      oIXQbrdZqJpPiZvx4I0ug8GAZbgh/zMyepBvmeM4iOMWUkB6+wwoEBtUNRC1Wg0PDw8IgqBQ
      OGtKtXR7e8uSI89mM8znc6zXa9zc3GA2m2E8HjPnKkKapjg5OWEnmUWsJfzCjONYGX79EFQl
      lLz3aCFU5Qbr9Rpv375FrVZjmdh5hZ3EoiiKMJ1Oj3LaDTyeMqxp2p64RnqO6K3M9yVNU/it
      LpKaXNFPAZjj8ZgFiCrTINM0cX5+jslksiNPFuEctVoNq9WKaerNZpP5q7Tbbbium+lVmqUI
      y2z89NkxPCEfCypOWpaokiTBy5cvmW5GEdN4BTuOYzSbTZyenrKUQsewQj0255BtCM1mkwVa
      k9UdJCnWn/8CzddfQ3fXH+4e6Ab8s6utO7QKWYoh8MGTj7c0ZJn56JpbFEVot9ssdCGVSZo+
      XYhW1Z0nrxe1SmWhqGmzKrIWsdiOMn0QDRO8/w+VYxgGy5tFSfKOsTk8lhLMg59/CmvZ6/Uw
      n88ZjYkXf1zdQPzzP4W9XsBwN0gNA1G7h8ByYJ6dneUqfeJ3BH6g884AaLD5+6Gyyx9ZxC9r
      C88SRflcHKy8vqlQRBQ5lvnyqUDjQRy5SkonEY+9ALJoq9frIYoi5lYvPhMkKcJGB1qz++EU
      niLDlQF7+Ud7K8VZKWNFeQqoCLKKzf6xJlY2ofxCVvWhiKhZBsdYvE8NWf/JIphl8ODTXgHY
      TZNatgFkcSHIdl7+87JQycWyOqg9QL7IcsxDsUMhs/jw3DTLEnUMUC7oY+Fjj2lZXWbHFSJr
      F5dBpYQea8fP2+l4gpBxHdWzsu+PgWOKQaqdn+o5FsIwZNlBDwXN+2NH0RMPUlXfyyDS5l5g
      rCKF8BAj+ooEVnWy8ghJJP68ep5iZ5KZkA8RtfIU/mMgTbees5TnuCqCIMB0OoVt21iv19Jx
      4D/L2ohkupxI9Kr3KB1W0bvpexyAwpXnZSHnIZO5qi4AFdHIPi9K/LJ2ycCXR7l48wJL0U22
      Yy0wmTLPt+8xQG7neXmHs2DbNjugeirIOEGn08FisWDmXiB7I2IcgEySdGBVFvwJJo8qCptM
      lOA/K7L7U70qnUEGTdMwGo0QxzE6nQ6WyyUGgwF7l3KckVelpmnMv8b3fRbiheIkVbmD+7Fk
      aApTX5UT0KnyU0LGHWlOPM/bSZeUuQDSNGU+ImUnQBZs6ZBFUESO5ld+lhxYhfuEYcjCfTca
      DYzHY8YNBoMBcyvwPA+1Wo1lRgnDkKUcJV98yr9bpn7+91MjDEPUajVYlqUMdKWCpmkYDoeM
      mzwl+A1R07bhNofDYSF9r1SKJFXFZZ6REbimFQujKJaT1dYqCimJPrZtw/M85kVJQV9pUfC+
      9pqmsQsmdB92NpthOByWql/TNHaYI5OBxT7zHE0mHx8ic5M4y5/JFOnLZrPByclJof4eE6K+
      QWNYZEM56D5AGTt7XmNUn5e9pFKkzCycn59D0zS0221o2jZ5R7/fZ4NK7ZFdI9R1HYvFArZt
      Z0YwkyFNt5GLKbPjx0aSJJjNZrAsi7mqeJ4HwzBY2Bn+IFPX9Y/qVUr0QPqo7JaiTC89aAEU
      MUPlEXxZs6SM+Ikoj2XP5ndUXqnLE+XiOEar1WKiT5XT58eO5V8G3W4XURQxsa/X67GMK5q2
      zQ9Mt8poo/gYEOeFboSRKMZvouL8HSdSkgSq08y8gx0ilqxIFDzKcpTHhmyB/BRPWgmmaeL0
      9BTABz8j6ku/34fv+5hOp6jVaiwQwWNZq7LA1+s4DpbLJUuvJHLjzHOAMnb8op0VZVFeRi2q
      MKvEHlX9nxrBFeGKnyqy5thxHDiOg9lshsVisRfb9SnBjyuJqJPJRCkSAUfgAFVXu4xDiKZL
      QpEMh586ZJsA8NNaDKIox/9Nd7bn8/lH0WNU+qhlWRiNRuy2IP9dmqbquECPSVQqApdZL6oS
      yKe+KMqIRVUPFY+FIjoM6QjL5bJSHZvNhgVY0JFCS1Mkms6yRZaBeDBWr9dZsj2xLwdbgY5J
      oDJXgiwRhyeiLBPgp4SsMcvr66cOXdf3AhgUxXw+38aGjUO0736AHvgIuwN4Vz/D/WSCMAxx
      enpaylhCsCwLi8UClmXt3Qs3DyFiwmOzcZW4oFKi/0XDp2QZykO9XmeBkssiCAKcze9grhcA
      AHv8Hkm9CU2zsNlsEMdxZf1iOBzi4eFhTyE26a5s1q4kyn1EcJTeiA/DwT9H78usPKK4RTmD
      yRdJLCfLYiTWo2kaXNetHPLvY+FT515F0Gg08ObNG1xcXJQi1kajsT17mXEBrADovgetZu/F
      n8qCSh+gTJZ8u8x6vV45vAlVdowJo4yTMpNVEdcIUQT6VHfNLPEga7GXheigqGlabnzNNN3G
      1jkkjHqapjg9PS29AVEQtLjWgDl/gAYgNQyEvSG6TkOZFE80pmRJC+T6zcOsIq/JGnAMHGJy
      /SmJQaoxr+K/JIPrunj9+jWLkBeGITqdDu7u7tDtdtFqtVhqKgqcO5/PUa/Xsdls0Gw2EYYh
      0jStxEXJGa1S288/Q+LUYfguwu4QQb0FFLQCZtEyuamI338cg60CqsYTl/I8b89Nmyean6p5
      8dggt4rpdMpctSnyw2azYQGydF1nIWrW6zVqtRrG4zHzCKXAumXHUpZEvCjiFHB7Hw7e8oi/
      qNjouq6Uizzu1Z2SUA0auRyT7MZHNxYdwfLKekzQYsyy5hzz7oAKuq6z6Agk3tJF8TiOYVkW
      ut0ui7VJ/j4Ug3Wz2WCz2TBxlHS0otzJMAzMZrPKdwuqcELZGQXFgyKPXtm4SznAx1bEqDPU
      jiiK2Ikj+adQ1GMxTqRqQTwFyvo1qd4/FES4ZPemHfnZs2c7hHJ+fs64JoUYUcnU9JnscxGa
      puHFixd4eHgo5R8k63+ZseTbfnt7i1arBdu2lR6qewdhVOHHOnihwRV3Sd/3UavVYBgGLMti
      fuq89epTsJzwJ9mH7PLiBqRy5srrM7WB3pcphvQZ3XzLMzmX6cPDw0NuUmsR4rPipiKzIIqL
      1PM8DIfDQhdilMFxP5VTR9qdVqsV6whdv5MFfXoq8GJBGR+lLBQZe547PoW+w29IYr3UVlX/
      8zK6lEGWeClaAE3TxHq9LiRuKi/FfyyIbaBOkzxJHUyShHkg8umQCEEQMP90lX4g223yTJF8
      HbLMhVnyf165JHvz7RHrFOvgk5Pw78naQe01DIMdVvF98DyPRYrLWlyz2Ywlrab6ZPNWq9UK
      i9NF5f4sCxp9TnmR+Tvd9IzYJ7YAPvbOz7cB2M/DRWG8+QMRyivM32GlxUK3mVQHZ/zzxGXW
      67XU7KeS7WULgC+zzIEeAFxdXUnbJxsfYCsaUnCyIri72yaKeP78OX7/+9/jL//yL5GmH6JC
      0Oby9ddf4+rqiulbpIMBW7Hz7du3he4885lojgkVjfLzEQTBzpVU1QJjUSF4+fVjQcZiCWm6
      Da8eRRFarRbSNN3Z5fkyZPJznjJHViZZ3SquJC5Y2fNiW47BZandZe7siu1J0wvZdpcAACAA
      SURBVBSLxQK//e1v0Wg00Gq1mEPb7e0tgiDA9fU1vvvuOzQaDZyenuLu7g66rmM+nxeqKwzD
      wveDVRtGFXqk4MqqediZE76iT0WRVBFJmqbwfR+r1Qqe5+3FnylSnnhucKw+55VzrHqyNogi
      /RGfubi4wJdffskOvgzDwOXlJb788kvGYTRte195uVziV7/6ldKyI7bh0LDrpH+UfYdSd/Ht
      UkGaIONjQSXfkYhC8H1/5zt+9xD7UuSyfRULh2p3EZ/jv0/TdIcLlFmAWck98tpB6Ha7+N3v
      frd3hiK217IsvH//HoPBALZtM7+e8XiMd+/e7eRvkBlO6P9ut4tvvvkGvV6P9VuVlon+p/vG
      RAvUVl4k5sVJ6odhGCxwQbfbRRzHuXOraRq0m5ub9FNQfikeEX/yyFtaVIQsElNRJVSG9Xpd
      OKKYiCxTG7WLbiapFGkVVAuONgKSz4tww/V6jfV6jeFwyNKm2rbN4hpRgNnJZILhcMhO3/v9
      PrsoX6/XpeMk9kXTNEynU3S7Xam+IM5r1tzk9W21WsGyrB0RmcqUvcvE7U9pAdClBT4aW94C
      oIBerutmLhJx15A9W3QBZC0yfhHyWSRpl6rCAcTdn94TF0BRi4uqXBEyXSkLsgWQJAnm87k0
      YtwxRVBN0/Dq1StcX1/DMAzp/Lquu5M6Nk3TDzrApwLRtp43SJqmsbB+ormQZ7liHaqy8sBz
      msfQJYpAVVeRNvCGBrH9sh9ZuWX0DTqvKRNqswo0TWNZYlTzO5vN4LougiBgl+aZFUgmDz61
      bkB1kitvkYGmeJayTquUxWO2Vyb/Ft1UskyeRZ7hF7kIWVlpmuIPf/gDgiDAxcUFOp0O4jhm
      CiONfxAEiKKIuQ6LGwsvo4umX1n7O50OxuPxnitylqWHn/8iIFeOMvB9f3sjTEb8H9M0WqZO
      OggTLQ683F22bgI/NlmTxY9TFYVaVjd9lzUHJKvLzgFEogW2Ee5c18XLly/RaDTwV3/1V1gu
      l/jqq6+w2Wwwn8/x/PlzvHr1CsvlEr/4xS8QhiEeHh5wfn4OwzBwc3ODdruN4XDIDifFMZKN
      VRRFuLu7w9nZWaHNtYg+I85VXliWZrMJx3GY81+SJDBJEeIL4hPe5SkTx0JVkYJ2/iwOIE6Q
      qn7Zsyori7jTH6LAydpblJMMh0Nma1ctGL6s29tb/Pa3v8VXX32Fq6sr+L6P8/NzrFYrNJtN
      /PGPf8Tnn3/O4mv+5je/wVdffYVvvvkGtVoNJycnzM9GJvPLFjR9RvmKwzDE5eVlYWuaaqzE
      ucnb7DqdDquTotrpskjAIuFnTYSu67BME9aPmSKPARKDytiR8ywwRcQpmawr+1tlxiu7+4vt
      kolUVSDjJPT7z//8z/Fnf/Zn+Oabb5jeFIYh/vCHP7Bsn6Ssk2VuuVzi2bNn+OUvf4kkSfDX
      f/3XynpFHU7cJM7OzhBF0Z4pu0ofxfdarRZms5nyHZk+qDzLlhEMHZlT5bZhoD69hzWfAGmK
      qDuAO7hAmKZ7hxFlkUUAJO/xtl76CYJAeUQvEjH/mUq0UYmIVSAT0VTfq9qR1c689m02G/zN
      3/wNDMPA9fU1Wq0Wvv/+ezZP9/f3aDab6HQ6+O6779BqtXB+fo7pdIpWq4V3796x4FdFOJ7s
      mfl8jvPz870T4qJjkfU9mZjJZUaELIT/nhlUNdhBEOD777/HixcvtjEwm0307t/AntzuZOEO
      +qeYXrzA23c36HQ6iKKokE84XbDPCipLbbu9vcXZ2Rlub2+xWq1wdnbGOhcEAdI0Rb/f33GH
      LaLk8wOn2tHFRVQk/ie/yGh3LbLDq8yfBMqz7DhO4UUpLkJ+vsW/xed4vYp2+zyI4zKZTNDp
      dBix8uJRVhmy9queXa1WME1T6SPF11tKZhkOh7i/v99en4sC2A93eynorekIzfBDYFLy38lD
      FREC2J42ko15uVwiTbfXAVWnlXkiRhYRy9yfqewwDHd8c+jKoWXoaCYRWpGPmrFLOGKW8yLg
      LT9in/LAt59flPxZC53E8iKoKJLSM0XBl9fv9zGdTtkdXVn/KPw8z9mprXlI0xTNZhOe5xWK
      Vr23AFQrm3Ya0zTRbDZhBh40GTsGYPguHMdhqWqqigyyNgBbF+B3796xWP7j8ZjJfrTDylI2
      ZTmj8cRUxGmNZ/Pr9Rrz+ZxZWeganq1raL9/jdYff4fWd/8vOq//PzTirc7l+z5ub28RRRGm
      06nUsU0mT8sW82OgjO6UV46IXq/HxFfgw5yJyBP9+GfEsSB3bV7X4NtE5WXqADwsy4Jt20x7
      TkMPKbDHAVIAieWgV28xl+RDQ5TQIJCY0+l09vw9+JPGNE1h23ahSSuyQPMIwHVdlkppPB5D
      07a51pzpCBYnIprrBervX2N18TnG4zEcx8H9/T3jrJeXl9K6qZ0qqNyyRZS1rfP1V4Fq56b7
      HPf398zPiFfIaTPI0s/E9sn6XKvVsFgspKIQjUOpqBA7OoHTQK3dg7nc1brjRhtBo4UkLhbK
      oohIwsvrIvsWPyuyK8oUxjLWIRHNZhN3d3dot9vMFt3rdWE83O5tEIa/ga1/uLDdaDTw8PCQ
      6zYss3rI2pU3DjLd5zEhG1/aIEhMJbcE/nnxnTyonhUPVUVUDosSxDFmn/8CjreBvZgAKRB2
      +vDqrUIyf5kOqyZaptDJIFPoZCA5ld5hihLn0yNrT6PRQL1eh6ZpLPqCrusIO31YsxG0H8tM
      AUStHmDZ+Oyzz6RtUEEmChV5liAuevre8zy2+5IjnAz0jujfVLTNqrbwz/K/iyLPMtZoNLBY
      LNDr9TAajdBqtXYu6FTOFA9sT/diy4F3+vyD7lCC+KuC3i/D0nm5uejk0fOiZYSfLJk8Ts97
      zS70ixewJ++hJQmiVg/u+WeIfmTxxzo3EReo2AfZd4S7uzuYpsmsar1eD5PJBKZpol6vM/Fu
      MpmwgFrNZnPPraEojsWZ8hYMfW7bNnq9HtuULcvaGXeT4r9UnQzRKlBU6a1itqP/ZcQolp1l
      zckiFNnnRZQxGcIkwWpwDrN/Bi1NEOkGI/7HgNhn2YIV4XkeywFmGAaWyyXjBGQVovOf2WwG
      0XOgLFQiGo0viUOWZcF1XRiGwe4Wy54XQamR+O9d12X/i6FfTGIReYcbx8YxZL2swSyDPPlf
      Fums6EKP4xjxh38qt1FsU5n3ZZsFbXgXFxfMW5NMiLSpka0+jmPEccwWyqFGjSzdZbFYwPM8
      9Ho9jMdjDAYDdl+71+thOp1iMBiwSM8UJC1Nt4evmqax+81ULi3kRqOxl9bXTNOt3XyxWKBe
      r1cOP12Gg4jEz++svNJSlJMcc+HKiEWmaxxS57HaXFZsEEU5AOyQki6RiO2ii+W0QdIzVWV2
      gshN+TI1TWMRKigfM0UPp3zWtVoNq9UKhmGwBO8UCYLOYPi61us1Op3OXnt1eqDdbsN13SfP
      9i0bwKI+QCpCEg9y+Lpk5cqu62VZXMqKQiIOfZ9HmYWUVydfFo2f6uyhLAfKUnz5v2u1Gk5P
      T5kOUq/X2QUXImzDMLBer5l5c7PZwHEc1Ot1FjNKBtkmvbPdt9ttdoJ2iB9PGVQ1y2URkbj6
      i8jvtAD4/+l9+v8pRcQ88Iu7DLek54/BycpAxVl5yxvwgRNRzjF6j6xsFAeJ/hfFYPJVE3XS
      ZrMpDdW4tyRIrtpsNk8yOPwkFCW2Y8r4/DM8QclYNIAdLvGxkdVeGcq0u8j5SFkUqV825vzf
      st95JmHgQ8BgcscmSAV327ZZXqWngMhii7BMmVIqc4Gg90S9gxeT+M/ziOlYVq5jLyBqcxHx
      MWuMxfZljcWhi+Ox3lfRia7rzBeJaFupuVqWhXq9jtls9iS7XR5L5ieCnhN9dmTvk1Ugy8u0
      aPvEdqhQhMCOARlX+hiGg6qQtYHvRxF6kIlUWXXouo7z83NYloX5fL5/EpymH9LkmKaJbreL
      +XzOfICODVknZHqByiojPiNyE7IoybwPs0ybRXc9vv1iFLpD9JusdqraXhV5OsGxdYay4m2W
      2TQPMlN5mqZMudbJG3G9XmM8HiOKIgRBgM1mw7JsdzqdwuHwDgXPxlXiiMgNxFAjNFGmaaLd
      brPbTQTR4kOf8d/LrEBFZe6iOofq86Ji2KHEKNZTpO5DoRJ38xaF+EzRMcjqj67r0F3XRRzH
      8DyPpdWhNDqTyYR55j3mIijK9oqCvyfseR7rQxm5XLUIVCHRxR1GBtniLtqeQ56RtUHVj8de
      AATZnKv6ohJt+c/ydB9ZnyzLgm4YBov0q+s6bNtmgabI5EQVdrtdzGazo2ZgFMUO2aDI/POL
      aP8k+lQ1ZfKKddnFKZsMUbFULaQ8oqhKnFUJ+7F0mjKKe15bqrQtiqKtK0Sapswdt9/vQ9O2
      QYZkhN7v9zGbzbaXYiqeGhdBWYKn7x3Hga7rzF+Fgr6Koo64ewDZhCXjBlntUsn/4im3TEbl
      61D1mScalR9WEb2pCLJ25kPL5cUvFYrUkae7yZ43TXM/MJYoW4uLIE1T9Ho9LJdLFmPlGEjT
      bbhuXlwRd0y+8eLgp+nWVZc/vxB3F373EGXfOI6xWq2k5dK7fP0ya4PqrqzMhZjaS/VR+Twx
      E2gxi2mMfN9nifDyOAXfb9kFGlmfZGOdtWDFtqvKpc9XqxVOT0/3yhH7cAxxTOQc9HvHHVpG
      aKpGtVot5nx0DE6gaVtf+qon0HzSDJ4D8IOvOiOgH8MwCtefRQhFnpdFKODBf04WLPHSDPnp
      qCw0qvlU6S8yTpnXz7zNIqtfruvmWniOpYuoRCfpAig6qbQIkiQpnAghr5FFIbaTBirrwrbK
      JEafqe6l8s9VhUzsUdUhTpTIJcq0USWeZZWjEqVUYqCsHXmLQPVMlR0/TxSjepS+QHzHyyyC
      NE3RaDSY2HHsVDh5dQPyyc+ywhT5niCKYeJ3eWVkyfUydnxsJfMQqLjKMcqtMncq8CKaKN7y
      7RfD0lNdJgAm62cpUVloNBosPPkxMwOq8BgmujxWnPVeloKs+rwMcZGpmsKoyGR7QJ20j9pI
      79m2ncmxVeWLz6jGrOgGSlHn+LL4w0TROsTrWTKdRMYJRHrm773c39/vJskTlcMyoOtzVT1J
      q+w0ZcS1ouWpRKssiJtHlU0kD1n5dlUigOxzwzAKXcIHshdyFvHngRaq4zjsAg5fn1inzDCQ
      9bxKlEySBIvFgoVMMU1zP08w35Ey9lkAjPD5oFRi+WKjVMnlslB2B83DMSwNItvlie/QsmV5
      emViVJnPD+1n0c+z4DjOTopblT6qitOk6lPWOBFWqxUeHh4+LADV6irbKfKxkC0CvjFxHGM0
      GmG9XiMIAoRhWCq++7EWwKHEL5s0sXzV80VRpH1lyi270fDtKKo/qZ7hxTTK1JLVLtmlJtUp
      Ng/RMzhJEiyXS3S7XQBbMbDVasnDovC7V5UJq9VqCIJgL+UQL164rssCQc3nc4RhiH6//yjy
      fVFkWSfoe0IWIajez7two0KWcp7VlqLlZT13bCVYpC3x8pKqjeJ4ZRkbZBxjNpuxQFn0/7Nn
      z9RxgQ61TFDGcX4R8KuW7nTWarWd7z82sohfJWsXeV/8vshEqnCI1STvnfV6zUIVUrwg3/dZ
      ZAZ929DtLlyyXnH8eJ2TH48sXUccP9kzYl2apmE4HO48d3d3t40kriogqxNZDeBBB2Sq5HPH
      3l2OAVWb8nanMlakMmOowrHENh6r1Qqu67IwKJRFhcKTNOMQzuQWWpogGJxjCgP+j75WlGWS
      ssNrmsbEDVW7NU1jrir0XR5nFQmc74tK/xG57GQywcnJyTYckKxhx4Rpmmy350F6wE8JeTuT
      TBlTlSObbNFLU5w4/vNjKO4igiBAu91Go9FAGIZ49+4dsxbVtRTNV1/DHt/Amtyi8epv0NG3
      oix5CTuOg/V6jTAMMZvNctuXpuVSWImBDrIUY74OcaxGoxG7GyzlAFkNrzLoFNxotVqx4/tj
      4RBdhd4ro/Dn7epV3s8y72XtjsfmoO12G/f392z3brVaLDyJuVlC910W61QLA1irOTN61Go1
      2LbNfKpUN/Bk8jp9Ln4nc1Isa/wQOcfr169ZrCGAyxTP7zJFZN2yoDAXq9UK7XZbmcu1DETZ
      saplSEaAhwy6qlzV90U2nSpKd1lYloWrq6s9jqPrOlJvDeg6kPwYuVnTkDo1dFvdnTnodrss
      /g6/OVmWxUyeMsiUelEPLdJX/l1xzGazGYIgwPX1NftOlylhVSc7j52Rs9lyuTzYjHnMHVEk
      xDxTZlYZsjJlcmnZ6BL0Dv9TdQzLcDoak6Degn/+GRLLRmLaCE6ewW92lTnB6DdxB5XDJO8p
      q7qow48ZPxYy+Z/Kks2jbdt7CbulrTqWgiUrhxbBYrGozG3Ezum6DtMwYGhACiBOUVq/kC3+
      ou1SWSdkfcsiWHFC88qqCpliyENWT5wkWJ89h98/g4YUkWUjjPcPSmXlxXEsTVQhG7M4jhEE
      ATtU5S1QYvlZG4DKKEHBtWihMRHoUNMa8MElgG+gahE0m03c398XumyfZSq0TRON1RT2+Ba6
      7yI1zG2yvtMr+Gm1vuRxBPFZFfGL7S9K/LJ2yOrL8notIiqU5R5xkiA2ftwzE/mYyO6PZIlv
      It3NZjNsNhs8e/YM8/kcvu+zy1lBEKDRaLBD1mazic1mg16vx+z8vu/DcRwWYIvgui7evXuH
      4XCI0WjE+i5dAARxArJk9jKKJIDKvvdpmjJ/DtM00bp/C+fuLTSySkchjPt3MJZz4GdfwStB
      /3lWheVyiVarhSAImNOfjJCofRSyj6It03Oe55VKbCeDapx5xfFQMTMPvJlR1R6Ze7pI9Pz/
      i8UCQRCwcDyWZeH9+/d4/vw5XNfFYrFgWUJ932dXd+M4ZmHdAbA8DcB23ujgSzTHm3mmvcdC
      mm5dqSn4aRb4dgRBgPF4jFarhWYcwLnniJ+D6a5Qv3+L6OIFs2wUyVaZ1d7RaLQTLpwmgsyG
      abq9KBRFEewkAnQNMbaHLhRZmR/X+XyOVqvFjuhVG4LIAQ5FWfNjHmQcUKxP9Zn4+/r6GsCH
      bJJhGOLs7IyZWolWNE2DYRhMuQawd6BK7fr666/xF3/xF9L6cnOEFRFpqoJiwIthq0XwbZhO
      pyxW/VCPpIn6COZiCv3sM5aOaDgcZooNeVYpWrCapmE6naLZbELTtnnBgK2S1W638Vmzhua3
      vwU0DcsXf4KZYcB1XURRBMdxEAQBlsslnj9/jnfv3uHy8hKj0Ui5AJglpqAynvfcYwRALqo7
      ZUkaPJc8PT2Fpm1TKaVpyohbjL1EZnXKAi8SeBzHODk5kY4L0wGykCcDZ3WG/he1cx7NZhPL
      5VJ6Uiwru1ar4fnz51tL0mqc/XwcIU23YbXr9frByj1lRplOp+j3+4iiCN1ulxE2RdGwNivo
      0XZXsr0Ny0oSRRGbTMuycHt7i263i/fv3+9ZJ/h68z7P0pFEEY0IgnJC0GeUVPAYBhCVFU1F
      /CrilPWR9EyZiCeKVvR9liu5SbHVZSdsVQdEXNHi7sX/TTd1NptNbtqdNE1ZuptWq4Uk3Egz
      VRISywF0HRcXF9A0bUdJL6KYiiCCOTk5Ye+mabpzsTuOY/j9U5jrOVJNR9Adoqfpe0Sapilb
      lKLCVhSijkbzJRKF6E9PCSSWyyW7O91oNNj4H7IIqr6rEpNU5s08sQvYLhbisLIAD8CPC4AC
      4apuFJU5sOIbrSI2sdF0hF4GcRwj6A63CnC0H/YwBRAOLxAl+85WfB95lJWvVYPvaTrin/0S
      aboNM5kmsXQ8+F1NpbTyk56XhqqoLE4iFd2O0nUdb9++ZVlhyOzIJys5BFnikbjJiop1lpkz
      a748z8ObN29wfX3NFGOZiGQC2x2BEqDJoqiRn35e4wmylEI8+Ias12vous7iwZeBr+kwr1+i
      /vobaHHEOEEKIBheYNMbIg7V+axUYhr/fRVjACP8AhxUXJwqwq5KhEXeTZKEcUny7SE6INGN
      uJ4KYjSOIu2RmXmB4mb5rEVCKZFEA4tYFrsUz/tyEFarlZTtELICSqnkPf5zSnszGAwqOcYl
      SYJ1vY3oT/4cznQE3dsgNU2E3SG8WhMBFwdeBb5vYvuOaQUrWlbezpb3TBHRgJ7jyyDlksQg
      /u7tw8MD5vM5NE1DFEVot9vMtBuGISMy0a9H07au1L7vsw02SRL0er2dGP18u/n/edpTjQNx
      KVFiub+/x4sXL/a4D3E2wo4SzN+iSdOUZQSUsQ6+kXwHsmQ5/n8C6SBVkSQJXAD+4HwnMFXy
      405UlCBkA33IAihSX5Hn+LZU4QJ54hCVLYKfk8FggPl8zjj1/f090nQbdrLT6WA2myGKIvT7
      fTSbTaxWK5ZtUtO2WV3u7u7YJvvdd9/h5cuXCIJgR6kt037+exLp3r17h7OzM6xWK3S73a2/
      P+eCoWnb3GM1x4Gm64jjOPtCDFlmyMMv645w3kKQvWdZFtbrdenY/TLtX0x2kWUhUOFQWTcL
      olhYpq68mPci+MWVVU8RbkPgffuvrq6g6zpub2/R7/dh2zaSJMFms8Ht7S0cx8GzZ8926udT
      Gl1dXeH3v/89bNtGrVbbCcNZdZGT2LlcLrFarRhXGI/HaDabCIIAtm3jWasB++4HQNPgDc6h
      rVartIgJkkJYiDKebPcukk1c0zTGBstGlhMdofJYpaqdIsSIFkUPi4pymaJliURJqUFlOgsP
      cQzyzlaOKeJVgeu6GI1GsCwL0+kUL1682Bn/opKBpm0PxW5ubhCGITsZphwXq9UKg8EANUPH
      8N0fYWyWAICo3VNniBGtP5ZlodPpFI4A12630Wq1lEREl5TLBtPiJ40msYhnJO9BWRS89UWW
      dVJsj+r9Y3MWVZlFFEfg4xI/Pyb1eh3X19e4vr7Gr3/9a4RheFDC9sFggOFwyEQg8jMjA4uF
      lN1p0AAYvpt9EizmW6VQ6svlck+JIdDAep7HklOs12sW1Ing+z4oMnXZjvJ/85aEImXl7dYq
      fadIe/K+fyqie4xFd0yI4+v7PjsPqqIb0XtkvqXAzaZp7vhsQQPiVgfa/AEAELV66gUgSzin
      aR+yrpCpTCQ82mUpOUWj0WBRjPnnTNPcyfVaBvwE87tZmUUgI8Zj+MccYrJUQWVRq4oyFqm8
      58vqNXk6YpkFIJtHTduGyI/jeEe0TtMUUQqsnr+E3ZsDmga/2c13hZDBNE00Gg12z1fFjonw
      I84iQ8/qus6SVzzFZJYtrwoR8+a/YyYRKaIEl9kx88ATYd7zMht+XrkqUJhEEmtlEC/F8O2g
      n+l0iuFwuFdfkiTwAYStHvs/UwTK6jwdp8tWMk9EFNpbPPTQNA1XV1d4//79XsiKj4UiJt08
      qLjRsRcq31ZR5OHFAn7DKVu2WA8P1e5bRiQU0el0mNzOt12lS8n6HkURXNdFEAQ7+qXKOFA5
      sH+WOZQWgSie0G9eTzg0mC5vXjym3b5KWccQfcTxA/aJt+hCfUydo2zZRfWSrKhvMgOI7O9n
      z54x5768unMDY6lA4U7IDz5JEhbBmA44fN9HGIZMAY6iaMt2TBOTyQRffvnlzsWFqnbyY8nc
      x1gEZeOpZrVFXAhVUIVQqzybJ/qUMShk0UHWePDi53q93vMAlm0YlTmApmn44YcfWNAkksks
      y4LjOOzaI9184v2JaJHQkbjKDeIQC9HHgkwUObQ8VRllrD0qUYZfaPxzeSij4xQtWzZeYrtF
      LiCWn6ZbD4b5fL5zwMqLhTwOym308uVLliGGT01KlVCibd/3dy5hrNdrXFxc4JtvvoHjOOj3
      ++xSDO/xeAhBV3n/Yx8MqcDLulV0C1Ge5s9OkrWL1PWRahqMdgOwTOmGdKix4lCI1iFRxOZB
      yd3JuzULBy0AwzDY3UwZaCBt24bv+8wy5DgObNtml0mm0ynu7+9hWRYuLy+ZD9IhKLujfczD
      oTzkWVryREfxM0PTMfu//jnu/tf/E8vf/xHxcgPoGuyTHvp/+S/j8u/9G3C+uGJzILMKlR2r
      ovNxLC4unjsp21XUFUIGkuun06mSJVIYaoo5mSQJ8yAUlZgwDPH+/XuEYYher8euuRXtDA8x
      kwgP1WQUuZTzMUDBxFR9EUUAFTRNQ3wzxtf/+L/B/P/5PaB4VncsXP17/yZe/Mf/PlLbVGZ5
      LIO8tum6jsVisRM5sMg7YltINA/DEJ9//nluuw7iACTb8zu8iCiKsFgsdrI4qkJnGIaBzz77
      DMDWJnxzc8N80TudDqIoKuw2naeUHXu3pxRRvOIqKon851S/LLWo2P6sPpch/vD7G/zuH/6X
      cH+4zexL4od489//M3g39/iT/+o/gWYalXfmMgqweLBahrPxzyZJwi7X5+EgDkCI4xjr9Rqb
      zWa/Ak5Wo0ZS7EiZXxENGEVc0HUdk8kE0+kU9Xodg8GAnfQd87AJ2OcAmqYxv/c8vH//HldX
      V4wrqhZZFd3kGGKB7of453/nP8Pmj29Kvff8P/jb+Pwf/33EGZ62WSgzR57nMRdrHqL8z0Pk
      ArPZDLZtw3GcPX1BhqOkeqfwFDLI5NVOp4PNZsO0dNGNmd4hIu/1ehgMBgiCANPpFJvNBvV6
      Hefn5wDACO4QyHYq0zTx6tWrQt6qaZri1atXaDQaGA6HmWLbU1urDMPAu//hn5UmfgB490//
      d1z8O/867JfPj2KWzUKtVlOmqs07FwC2dLDZbJTiogxHWQBAftCsNE13vDEvLi5gGFvWutls
      EAQBM6Py4hQ9TwrZcDjE2dkZgiDAmzdvkCQJ+v3+ToSDYxJYmqZ48eLFjvOfigh0XcerV6+k
      1hq+vKdGunJx+7/8H9XeDULc/I//G372X/yHuVdd996t0Fff99FsNnfyBoh6jgy6ruOHH37A
      559/XorrHG0BiN58eeBZV7PZ3Ibg/vEGkW3bWC63PtvigRCZSnVdZxczLoestgAAEXJJREFU
      FosF3r59izRNcXJywoJTlQEtUN5sxsvpvBwuinXUxjiO8fz5c/zxj3/Ey5cvAeBga9Yx4H7/
      Du6bu8rvT//vvwaCCKlRfPcvc0bBIwxDuK7LuK5qEYhzEMdxJZeaoy0AsvYQ4cpAHRCTFhPR
      EyzLgmVZe2Y4foERwdHlZ4pwMB6P2a2kMkjTlAWs4hX1Ipe8+TI0TcMXX3yBN2/ewHEcnJ2d
      fdRFoGka3O/eAgfoS+FsiXAyg37Wl5pC85RvfpMQQYROY3R2dob379/vhJrh55+/bMUviul0
      Cs/z9vJP5IlsR1sAuq6jXq8jDENp5DG+IUUcs1qtFjOZUlQ1FUjxBIB+v4/T09NKuw+xUUre
      R+0W66ay6bSbXD6ADyLY9fU1bm9vMZ/PpZfAnxJJcGDdSYK0QtCCItwiiiI0Gg0YhsF0PgrO
      wHsP8JZCcdMh7n12drZnGcprw9EWALAlIIrQq5J/iV3lgUys+o+Xl4vuohRFuCr6/T7W63Xu
      zTdadHTXlPyfqN9hGOLi4gKj0Qh3d3cflRPYJ9VjogKA7tgwWw2ghAKcd3jHw3VdWJbFDkAp
      UIJMrKZYslS+7/s70UxUZma+DbzodLwIqT+CzgVE8Ks4DENsNpuPohBmIU1TeJ5X6o4ycTwZ
      iw/DkHGj+XzOQis+JdI0RePLF1s3h4po/OwKRm/fslJEzjdNE7ZtQ9M0pVhK4id5FFCU5yAI
      cHd3hzAM4fs+VqsVC7MyGo3Y5/P5HK7r4uHhATc3N1iv17i7u8NoNEIURQjDEEEQsJ8wDDGd
      Th9nAdCNMVoEJKuLyd9kZwZZeIrFEoYhu8ZZBNQ3Em9ku2MYhri8vEQURfjNb36TmT/rsWBf
      DtH9W19Vfv/s3/pXkWTY4lXgCZssfhQdIgsk608mE5yfn+P+/h6e57HAbcR54ziG53nMDE6H
      puRxTMk1HMdBrVZDvV5HvV6H4zjMU+DoC4BEFzoXiOMYNzc3uL29he/7bOcfjUbwPA8PDw+Z
      IhG/yzz2IrBtu3Tk5CJtCoIA5+fn+PWvf43RaISHh4fSkTAOQQzgxT/8O9ByHMNkaHxxhbO/
      /a/snVgT6NAy7+SdduK8zUXTtjkB7u/v0e12cXd3h8FgwDgzeRpbloU0TZlLfr1eR6PRgG3b
      LGS66s55EARMWT7KSbAMm80Gy+USQRDg9evXsCwLJycnbAHEcYzz83OMRiMMh0M8f/5cWg6J
      TIvF4ug2fhloV3mMMaHJffPmDTvEeyoYhoG3/+R/xqt/8k8LW4TMbgu/+u/+c9T/7EvlIVhW
      vNIqptAwDBnxUhl8ubKQONQGXddh2zZzmck6iJzNZhgMBsfnAARSaoDtCZ9lWRiPxzuNG41G
      OxYcGcgdgUKPP9YpJME0zT1Lw7FAIsHp6SnW63XpkDCHII5jPP8H/zY+/4/+7jbbYw6sQRdf
      /df/KZp//idS3xyC6OYiQ5mxFC+z8yZX0QQq1kH3z1Xhb+iciWgqDMPjWoHEysiBbTAYwDAM
      mKbJWNl4PGa7fp5iSDunYRiPbk4k+dF13UeT1RuNBm5vb9np9VMh1jU8/0d/D52/9Qu8+m//
      J6z+5jsk3q7FzOw0cfKv/SVe/KN/F+azE+YDJDM9ltmQih6SkghNf4t1yM4hiD7ochX/OdVJ
      IhIlS9F1/cccE48kAgFgGcPFU1T6v9PpsCwreaBAWq7rPkpbCSRy0Z3Sx+AEtEPd39/j5OTk
      ya1hmqbBgIbNN6+x/Os/ILifQDMM1L+4QufP/gTWxRCRoJepDrTKXrbP66vv+4jjGK1WS0r8
      soXHcw2KZcXrJuR/RhyXOMVmszkuB5jNZvjhhx/w7Nkz9Ho9aJqGyWTCLEKUPI6uSZINnSwE
      y+USSZKg2+3u7ATAh1X+FAuAfmex/kNANm4qu+wCoJhNJEryZagSQfBI0xQRUtj/0mc4+fJ6
      50Q3TdM94hffLYqscZONLdFEVuZQlRhGmxb5kvFcwHEcFqIH2G7MzWZzm2ixcG9ykKYpXr9+
      jV/+8pcAgO+++45lBield7FYoFarsTxfURTBtm3m+HR+fs48MF3XxZ/+6Z/udcQ0zSc5UBIt
      T8deBCRmGYZR2HlL13WWY+zt27cYDAZoNpvMh4lORMucsZRVVMsuWNW4qQiZ1/Vkcr6qHNHL
      gG8jLQiebuiw9KgcgFZiHMfYbDbwfX/HNZUiDHe7XUynUxiGgcFggIeHB2aCpIhxFEue5wKU
      kZECKPEg7kG3yA4Fn73yMUQhOnOgU9A8oqKJ/d3vfodms4nLy0usVis8PDywU2jP89Dr9XB6
      enrURHhZhEcoMkY8kZLHAC+mAGB2e9IZKcm2TPej2LN0wBVFEUzTLLRJuq673VAznyoBTdPw
      s5/9DK9fv0a/30e9XmcBcoktkR13MpkwEYk6Tb5EdLtMdGoi1Go1BEGwM8FxHGM8HuPy8hJh
      GOLh4QHtdhvr9RppmrJF1m63WZZHGnQxdSqJFrxH6WPoAeTG/erVK7x48WIn3acMpmkyDkve
      qZSogjYKwzDw7bffIk1TDIfDgwwGMtmeF7OykGcRarVaMAyDucBrmsYshcxF4cc6KMoILQQ+
      8w6JeyT6LJdL5oYjcgZqP/1v2/b2UO4xlWAeabq9EE87tbjjkczf6XTYKR6tZrETsnvIy+WS
      cZKzszPc3Nwwk2aSJBgMBhiPxwjDEFdXV5hOp1iv17i+vt6bUAqTztu4Zaz1UJA5jrxXB4PB
      jh88D8oqeXFxoSRsuk/x/fffo9ls4uTkpNIi4M2Iok6UZe/nRReZqETvNRoNFrNHXFRF9AbR
      v4faSy4Pruvu1E3KbxRF7BAtjuOtLvpUC4BAiRRodxZBydvInEXsUNT65/M5k+PiOGZJrDud
      DpbLJRNfaGekiMHA1vpEybPPz8/3FgDdOOMnRySIY8K2bUwmE5Yw++TkZEdps20bb968wbNn
      zzJPXYnw6MzF8zw8e/as1CJQEXBWBD7xMEw1VrwNnkTVY3JX0jXJTYICsZF7C+mgZJRJkiR7
      ATymFYTkfNlkUsJp0idI0SOQzOe6LjOp8m0VsxuKn9H/qgldrVbsbEKljB17IdAiX6/XGI/H
      GAwG6PV6zI/qm2++wa9+9atMKxjfVsMwsF6vsVqtcHFxUchDtipB8uOct1HUajXm/vwYoiVJ
      CKJlDNjqdXTXhJ7NXADEMh5LBl6tVnvsCtgOZLfbZcqMbds7Iggfmp2/NHMMoiSlSkz4Jj4j
      7nrHuqBPyt9sNsN6vcbJyQnu7u7wxRdfwPO8UllfDMPA27dvcXFxUfgQ6tC5Vp0XUHu63e6j
      0VQeaBPkkanNiPL3MaHrOgudKIJWcZIk7MyAB+3e5GZbBaJ3Ki9fZhFLFEWYzWbMrRb4EM0g
      y/KwXq8LtZWUveFwCMdxMJ/PmdyvIn7SUcTyKSv8eDzOjZB2DGQtIF3XH3XnLwKZ8v50LokS
      UMYZ2SUWchsmyxCBXGoBMCV5sVhU2v1lnIcWHxGUaN67ubnB6ekpi1BBpl3SbdrtNtvFkyRh
      tv7ZbIbNZrMTD7Ver2M2m6Hdbu9tBHQvlr8ZVwWNRgPj8TjzGRXhFhWBZaIklUn3Q0j0+FjE
      r8KjOcMVhWEYO/cHeHiex+R8fjLIr5tMZPV6/SjZXXi/EV5H4C0hvGMeKdx0IabdbrMUoXRR
      JooiTCYTZvvebDZYrVbMu5VMuDw0bZvmh3xXshZ3nthCl3Lev39f+J60yBWLwLIs1Ot1tmk5
      joN2u41Op8Pm6lMjfuATWABktVAl1BNDrMsU0mazeZQB5ifd87w9sYEsGHd32wgLFOOUshFa
      lsV8iBaLBbPX27bNfgzDYHecPc9jpkuxz81msxABFiFUKos4W1ZZvGhYRicgnYwWAEX6oGut
      nyLxA494H0CGLJYaxzGm06lUjqZdPyvrJGUGKeoGIJOnyT1D07Zpdvr9vtTfnWzP9Dd9zue6
      5Q9qyE2BRCriLryIxZ+Srtfr0gkEs4iVbOTr9ZpZlvLK4n/ngQ4y0zRlcv5PBU/KAfIsJaoB
      T9M0UwkEtqIUseAq0LSt4x7dM+31ejsEyIsFMhMbT8jkm0MyMB9viP9MprxWzZ6ZBSJMOoQs
      QqBldmwS7xqNxlFE0afEk7Y2KxEGWX3E00T6oYONrEMgWgRVJ5hkVfLNEesSZWNeZMhCUXma
      zKmLxQIPDw977dQ0DfP5fO89irwti8mkaRoWiwXCMMT19TXevHnDuFyV9soUXRI/P2VRR4Un
      tQKpQo2k6faKmswNgP9f09SRBeh7OmWky9h0Oih7ViyfzhzyUHaSi+7mURSxe9MnJyfsIKvX
      62G5XLKIeeT0RrfraPGvVit2Enp6egrf99l9DNpgXr58iW+//RYvX76s5DAnilpkifspiT08
      ntwMSj5BJCLQT7/fZ+ZMlRWCzJ9ZoPMB0zSZNYciCsjawv9dr9eZG8THACn6tVqNpfm5vLzE
      69ev0Ww2MZ/PmUcs7fqUa4GiWFMgMQr9QX5R8/mc3afo9Xp4eHhgN/ZkkOlrvG7QbDbZOc1P
      Tezh8VHOAeI4Zi7NJB93Oh20Wq3M3MObzYZZXbIUPgA7UcWCICjsvkCKq2pSH5PF04Vu4oZ0
      dZLSTNHCIKvTfD5n42EYBhzHged57ICw2WxiNBqhXq8zLkjf87kXVG4SotWN55oU0e2nTPzA
      E1uBCESUxLKBXYIF1FGe6QSZbPFF6hJzFxB3kSnVuq6zaGMqZ67HgqZpexxItDgVLYcnVk3T
      2ALiOTC5lZ+enkoP2sT+8mUahoF+v/+TXwAfpfUky5O/D7DvgqAiNrobXDT8oag38Mqaqvys
      3f9YPkeq8gkkzvBeoVXLJN2K2k2XjobDoVIhlo0PjR2dafzUFF4ZProrBLF9HqL8KSM4uklV
      ZAcisYGP4MZ7i4p1qIhclivrmCCFnY+Hen9/j/PzcwRBwE6G+UPBer2OxWLBxBw6ePM8D/V6
      HcvlEp1OZ8c8TONOVid+DPPGkz/V/RdhAXxU/kUnh+12e+f6YRFO4Ps+y8uVB7pjQM53xAGy
      Tinp4vlTsngSLYAPFi26KRVFEW5vb3Fzc8N8g+7u7vDu3TuYponlconRaITVarXjMZumKTu5
      5lGr1bBcLhkHLkLQ5MbOhx75qeOjC3BkrWm1Wns+PVm25TRNsVqtlDeoZPU0m020220mY6sm
      nW5pkT1eZuKr4i9TBHQbDgDevn2LJEnw8PCAzWbDLEC1Wg2z2Yw9P51OmU4TBAFmsxl0Xcds
      NmN6lthWXddZ0AJy2CuKn6K9X4WPogRnIYoirNdr5rdC7FzlDek4DrtjWpQtR1GE+XzOiIZP
      0A18cEdot9uYTCawLEvpm6OSlUnpLMKhoihiYoXruuz+A+lFuq7v3c2g/yk6cqPRYG0UL/4E
      QcDMlvzlkCiKMBwO8e233+L6+rrwRkIerz91BRj4hBYAf7rKuxlQOBVe6eV1BNoVkyTZM8up
      OEeapmxRJUnCDsyoXD6XMfAh2JIKoqWE9BNyaW6325l3Bei6Ji0W13VxcnLC6s4CLWIVlwrD
      kJksgV0Zf7lcotfrwfd9TKdTnJ+fF1qw3W63sP71qeOjKsE8ptMp3rx5g1qthpcvXzIinE6n
      6HQ6TNSJ4xh3d3cssBHdBwa2ceXJvPfixYsdhzN+gVFKU9M0oes6s4qQCZR89YkYgiDYuSMs
      QhQtqMxut8uiVDQaDTiOgzAM2UV9EkPq9TqTxcnMS7J8nlcobQKyNlFgAbpTIKLdbmO5XLJo
      GXQDL28RlE2W9ylDe3h4SIsc/z826BR4uVyyiyKXl5fwfR+e58HzPOYeQIc+xBmazSYjgvF4
      zC7VG4aBWq3Gjvxd18Xl5SVzk3BdF9fX12zX1jSNeWKK5xBFIq7Rc3SOQCBipJ2aophRiBfV
      zTvqQ1k9I0sEE+uhWKjL5ZKFsKHQgar3HMd50sC+j4n/H+KhVQawpwn1AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
